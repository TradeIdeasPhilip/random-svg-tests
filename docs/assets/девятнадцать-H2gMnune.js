import"./modulepreload-polyfill-B5Qt9EMX.js";import{g as l}from"./client-misc-1LRynplM.js";/* empty css              */import{p as T,P as k}from"./path-shape-C9IyAXDp.js";import{b as S,s as L}from"./utility-Dw-q5N--.js";import{m as E}from"./misc-CLGTS8fC.js";const f=l("go",HTMLButtonElement),b=l("source",HTMLTextAreaElement),M=l("result",HTMLElement);b.addEventListener("input",()=>f.disabled=!1);class x{static#t=l("error",HTMLDivElement);static display(t){this.#t.innerText=t}static displayError(t){t instanceof I?this.#t.innerHTML=`Unable to access <code>support.input(${t.requestedIndex})</code>.  Only ${u.length} input sliders currently exist.  <button onclick="addMoreInputs(this,${t.requestedIndex+1})">Add More</button>`:this.display(t.message)}static clear(){this.display("")}}class r{#t;get svgElement(){return this.#t}#e;get pathElement(){return this.#e}constructor(t){this.#t=S(t,SVGSVGElement),this.#e=S("path:not([data-skip-auto-fill])",SVGPathElement,this.#t),r.all.add(this)}static all=new Set;#s=NaN;get recommendedWidth(){return this.#s}#n(){const t=this.#e.getBBox(),e=this.#t.viewBox.baseVal;e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height;const a=t.width/t.height,n=300,h=n*a;this.#t.style.height=n+"px",this.#t.style.width=h+"px",this.#s=Math.max(e.width,e.height)/100,this.#t.style.setProperty("--recommended-width",this.#s.toString())}setPathShape(t){this.#e.setAttribute("d",t.rawPath),this.#n()}static setPathShape(t){this.all.forEach(e=>e.setPathShape(t))}static getOuterHTML(){return E.pickAny(r.all).#e.outerHTML}deAnimate(t=this.#e){t.getAnimations().forEach(e=>e.cancel())}}new r("#filledSample");new r("#outlineSample");class A extends r{constructor(){super("#chasingPathsSample")}setPathShape(t){super.setPathShape(t);const e=this.pathElement,a=1500,n=Date.now()/a%1;this.deAnimate();const h=e.getTotalLength();e.style.strokeDasharray=`0 ${h} ${h} 0`,e.animate([{strokeDashoffset:0},{strokeDashoffset:-2*h}],{iterations:1/0,duration:a,iterationStart:n})}}new A;class H extends r{constructor(){super("#dancingAntsSample")}setPathShape(t){super.setPathShape(t);const e=this.pathElement,a=250;this.deAnimate();const n=e.getTotalLength(),h=Date.now()/a%1,c=4*this.recommendedWidth,i=c*10<n?n/Math.round(n/c):c;e.style.strokeDasharray=`0 ${i}`,e.animate([{strokeDashoffset:0},{strokeDashoffset:-i}],{iterations:1/0,duration:a,iterationStart:h})}}new H;class $ extends r{constructor(){super("#tauFollowingPathSample")}setPathShape(t){super.setPathShape(t),this.svgElement.style.setProperty("--css-path",t.cssPath)}}new $;new r("#textPathSample");class w extends r{static doItSoon(){console.warn("placeholder")}#t;constructor(){super("#clipAndMaskSupport"),this.#t=S("mask > path",SVGPathElement,this.svgElement);const t=new ResizeObserver(()=>w.doItSoon());[this.#e,this.#s].forEach(e=>{e.decode().then(()=>w.doItSoon()),t.observe(e)})}get measurablePath(){return this.pathElement}#e=l("clipPathSample",HTMLImageElement);#s=l("maskSample",HTMLImageElement);#n=l("maskSample2",HTMLImageElement);setPathShape(t){super.setPathShape(t);const e=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="${this.svgElement.getAttribute("viewBox")}" preserveAspectRatio="xMidYMid meet"><path d="${t.rawPath}" stroke="red" fill-opacity="0.5" fill="black" stroke-width="${this.recommendedWidth*4}"/></svg>`,a=`data:image/svg+xml;base64,${btoa(e)}`,n=`url('${a}')`;console.log({svgString:e,dataUrl:a,maskImage:n}),this.#n.style.maskImage=n;const h=this.measurablePath.getBBox(),c=T(h,{x:0,y:0,height:this.#e.clientHeight,width:this.#e.clientWidth},"meet"),i=t.transform(c);this.#e.style.clipPath=i.cssPath,this.#t.setAttribute("d",i.rawPath);const d=c.a,p=this.recommendedWidth*d*8;this.#t.style.strokeWidth=p.toString();const g=507;this.deAnimate(this.#t);const o=this.#t.getTotalLength(),m=Date.now()/g%1,v=16*this.recommendedWidth*d,P=v*10<o?o/Math.round(o/v):v;this.#t.style.strokeDasharray=`${p} ${P-p}`,this.#t.animate([{strokeDashoffset:0},{strokeDashoffset:-P}],{iterations:1/0,duration:g,iterationStart:m})}}new w;const u=[];class I extends Error{constructor(t){super(`Unable to access support.input(${t}).  Only ${u.length} input sliders currently exist.`),this.requestedIndex=t}}const D={input(s){if(!Number.isSafeInteger(s)||s<0)throw new RangeError(`invalid ${s}`);if(s>=u.length)throw new I(s);return u[s]}},B=l("inputs",HTMLDivElement);function y(){f.disabled=!1;const s=u.length,t=.5,e=`<div class="has-slider">
      <input type="range" min="0" max="1" value="${t}" step="0.00001" oninput="copyNewInput(this, ${s})" />
      <code>support.input(${s})</code> =
      <span>${t.toString().padEnd(7,"0")}</span>
    </div>`;B.insertAdjacentHTML("beforeend",e),u.push(t)}window.addMoreInputs=(s,t)=>{for(s.disabled=!0;u.length<t;)y()};S("#inputsGroup button",HTMLButtonElement).addEventListener("click",()=>{y()});y();y();{const s=l("segmentCountInput",HTMLInputElement),t=l("inputsGroup",HTMLDivElement),e=()=>{x.clear();const i=`"use strict";
`+b.value+`
return { x, y };`;let d;try{d=new Function("t /* A value between 0 and 1, inclusive. */","support",i)}catch(o){if(o instanceof SyntaxError){x.displayError(o);return}else throw o}const p=o=>{const m=d(o,D);if(!(Number.isFinite(m.x)&&Number.isFinite(m.y)))throw new Error(`Invalid result.  Expected {x,y} where x and y are both finite numbers.  Found: ${JSON.stringify(m)} when t=${o}.`);return m};let g;try{g=k.parametric(p,s.valueAsNumber)}catch(o){if(o instanceof Error){x.displayError(o);return}else throw o}r.setPathShape(g),M.innerText=r.getOuterHTML()};let a=!1;const n=()=>{f.disabled=!0,a||(a=!0,requestAnimationFrame(()=>{a=!1,e()}))};w.doItSoon=n,f.addEventListener("click",n);const h=l("segmentCountSpan",HTMLSpanElement),c=()=>{h.innerText=s.value.padStart(3,E.FIGURE_SPACE)};c(),s.addEventListener("input",()=>{c(),n()}),window.copyNewInput=(i,d)=>{u[d]=i.valueAsNumber;const p=E.assertClass(i.parentElement?.lastElementChild,HTMLSpanElement);p.innerText=i.valueAsNumber.toFixed(5),n()},L("button.show-this",HTMLButtonElement).forEach(i=>{const d=E.assertClass(i.parentElement?.nextElementSibling,HTMLPreElement);i.addEventListener("click",()=>{const p=d.innerText;b.value=p,n(),t.scrollIntoView({behavior:"smooth"})})}),n()}
