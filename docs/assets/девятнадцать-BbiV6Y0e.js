import"./modulepreload-polyfill-B5Qt9EMX.js";import{g as c}from"./client-misc-1LRynplM.js";/* empty css              */import{t as E,P as T}from"./path-shape-C2966eRL.js";import{b as A,s as I}from"./utility-2TZy30Cu.js";import{m}from"./misc-CLGTS8fC.js";const y=c("go",HTMLButtonElement),b=c("source",HTMLTextAreaElement),$=c("result",HTMLElement);b.addEventListener("input",()=>y.disabled=!1);function w(e,t,s){const a=e.width/e.height,n=t.width/t.height;let o,i;s==="fit"?a>n?(o=t.width/e.width,i=o):(i=t.height/e.height,o=i):a>n?(i=t.height/e.height,o=i):(o=t.width/e.width,i=o);const r=-e.x*o+(t.width-e.width*o)/2+t.x,d=-e.y*i+(t.height-e.height*i)/2+t.y;return new DOMMatrix().translate(r,d).scale(o,i)}function L(){{const e={x:-1,y:-1,width:2,height:2},t={x:0,y:0,height:244,width:325},s=w(e,t,"fit");console.log("Test 1 (fit, square to wider):",{testFrom:e,testTo:t,testMatrix:s.toJSON()}),[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}].forEach(({x:n,y:o})=>{const i=E(n,o,s);if(console.log({xFrom:n,yFrom:o,toPoint:{x:i.x,y:i.y}}),i.x<t.x||i.x>t.x+t.width||i.y<t.y||i.y>t.y+t.height)throw new Error(`Test 1 failed: Point (${i.x}, ${i.y}) is outside destination (${t.x}, ${t.y}, ${t.width}, ${t.height})`)})}{const e={x:-1,y:-1,width:2,height:2},t={x:0,y:0,height:325,width:244},s=w(e,t,"fit");console.log("Test 2 (fit, square to taller):",{testFrom:e,testTo:t,testMatrix:s.toJSON()}),[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}].forEach(({x:n,y:o})=>{const i=E(n,o,s);if(console.log({xFrom:n,yFrom:o,toPoint:{x:i.x,y:i.y}}),i.x<t.x||i.x>t.x+t.width||i.y<t.y||i.y>t.y+t.height)throw new Error(`Test 2 failed: Point (${i.x}, ${i.y}) is outside destination (${t.x}, ${t.y}, ${t.width}, ${t.height})`)})}{const e={x:-1,y:-1,width:2,height:2},t={x:0,y:0,height:244,width:325},s=w(e,t,"fill");console.log("Test 3 (fill, square to wider):",{testFrom:e,testTo:t,testMatrix:s.toJSON()}),[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}].forEach(({x:n,y:o})=>{const i=E(n,o,s);console.log({xFrom:n,yFrom:o,toPoint:{x:i.x,y:i.y}})})}console.log("All tests passed!")}L();class S{static#e=c("error",HTMLDivElement);static display(t){this.#e.innerText=t}static displayError(t){t instanceof M?this.#e.innerHTML=`Unable to access <code>support.input(${t.requestedIndex})</code>.  Only ${u.length} input sliders currently exist.  <button onclick="addMoreInputs(this,${t.requestedIndex+1})">Add More</button>`:this.display(t.message)}static clear(){this.display("")}}class h{#e;get svgElement(){return this.#e}#s;get pathElement(){return this.#s}constructor(t){this.#e=A(t,SVGSVGElement),this.#s=m.assertClass(this.#e.firstElementChild,SVGPathElement),h.all.add(this)}static all=new Set;#t=NaN;get recommendedWidth(){return this.#t}#n(){const t=this.#s.getBBox(),s=this.#e.viewBox.baseVal;s.x=t.x,s.y=t.y,s.width=t.width,s.height=t.height,this.#t=Math.max(s.width,s.height)/100,this.#e.style.setProperty("--recommended-width",this.#t.toString())}setD(t){this.#s.setAttribute("d",t),this.#n()}static setD(t){this.all.forEach(s=>s.setD(t))}static getOuterHTML(){return m.pickAny(h.all).#s.outerHTML}deAnimate(){this.#s.getAnimations().forEach(t=>t.cancel())}}new h("#filledSample");new h("#outlineSample");class D extends h{constructor(){super("#chasingPathsSample")}setD(t){super.setD(t);const s=this.pathElement,a=1500,n=Date.now()/a%1;this.deAnimate();const o=s.getTotalLength();s.style.strokeDasharray=`0 ${o} ${o} 0`,s.animate([{strokeDashoffset:0},{strokeDashoffset:-2*o}],{iterations:1/0,duration:a,iterationStart:n})}}new D;class k extends h{constructor(){super("#dancingAntsSample")}setD(t){super.setD(t);const s=this.pathElement,a=250;this.deAnimate();const n=s.getTotalLength(),o=Date.now()/a%1,i=4*this.recommendedWidth,r=i*10<n?n/Math.round(n/i):i;s.style.strokeDasharray=`0 ${r}`,s.animate([{strokeDashoffset:0},{strokeDashoffset:-r}],{iterations:1/0,duration:a,iterationStart:o})}}new k;class N extends h{constructor(){super("#tauFollowingPathSample")}setD(t){super.setD(t),this.svgElement.style.setProperty("--css-path",T.cssifyPath(t))}}new N;new h("#textPathSample");class v{static#e=document.createElementNS("http://www.w3.org/2000/svg","svg");static#s=document.createElementNS("http://www.w3.org/2000/svg","path");static#t=document.createElementNS("http://www.w3.org/2000/svg","mask");static#n=document.createElementNS("http://www.w3.org/2000/svg","group");static#i=document.createElementNS("http://www.w3.org/2000/svg","path");static#o=c("clipPathSample",HTMLImageElement);static#r=c("maskSample",HTMLImageElement);static#a=!1;static#h(){if(!this.#a){document.body.append(this.#e);const t=document.createElementNS("http://www.w3.org/2000/svg","defs");this.#e.append(t),t.append(this.#t),this.#t.id="path-to-mask",this.#t.setAttribute("maskContentUnits","userSpaceOnUse"),this.#t.setAttribute("maskUnits","userSpaceOnUse"),this.#t.setAttribute("style","mask-type: alpha"),this.#t.append(this.#n),this.#n.append(this.#i),this.#i.setAttribute("fill","white"),this.#i.setAttribute("stroke","white"),this.#i.setAttribute("stroke-width","0.1"),this.#i.setAttribute("stroke-opacity","0.5"),this.#e.append(this.#s);const s=this.#e.style;s.opacity="0",s.maxWidth="0",s.maxHeight="0";const a=new ResizeObserver(()=>this.doItSoon());[this.#o,this.#r].forEach(n=>{n.decode().then(()=>this.doItSoon()),a.observe(n)}),this.#a=!0}}static doItSoon(){console.warn("placeholder")}static setPathShape(t){this.#h(),this.#s.setAttribute("d",t.rawPath);const s=this.#s.getBBox(),a=w(s,{x:0,y:0,height:this.#o.clientHeight,width:this.#o.clientWidth},"fit"),n=t.transform(a);this.#o.style.clipPath=n.cssPath,this.#i.style.d=t.cssPath,this.#t.setAttribute("x",s.x.toString()),this.#t.setAttribute("y",s.y.toString()),this.#t.setAttribute("width",s.width.toString()),this.#t.setAttribute("height",s.height.toString())}}const u=[];class M extends Error{constructor(t){super(`Unable to access support.input(${t}).  Only ${u.length} input sliders currently exist.`),this.requestedIndex=t}}const H={input(e){if(!Number.isSafeInteger(e)||e<0)throw new RangeError(`invalid ${e}`);if(e>=u.length)throw new M(e);return u[e]}},C=c("inputs",HTMLDivElement);function x(){y.disabled=!1;const e=u.length,t=.5,s=`<div class="has-slider">
      <input type="range" min="0" max="1" value="${t}" step="0.00001" oninput="copyNewInput(this, ${e})" />
      <code>support.input(${e})</code> =
      <span>${t.toString().padEnd(7,"0")}</span>
    </div>`;C.insertAdjacentHTML("beforeend",s),u.push(t)}window.addMoreInputs=(e,t)=>{for(e.disabled=!0;u.length<t;)x()};A("#inputsGroup button",HTMLButtonElement).addEventListener("click",()=>{x()});x();x();{const e=c("segmentCountInput",HTMLInputElement),t=c("inputsGroup",HTMLDivElement),s=()=>{S.clear();const r=`"use strict";
`+b.value+`
return { x, y };`;let d;try{d=new Function("t /* A value between 0 and 1, inclusive. */","support",r)}catch(l){if(l instanceof SyntaxError){S.displayError(l);return}else throw l}const p=l=>{const g=d(l,H);if(!(Number.isFinite(g.x)&&Number.isFinite(g.y)))throw new Error(`Invalid result.  Expected {x,y} where x and y are both finite numbers.  Found: ${JSON.stringify(g)} when t=${l}.`);return g};let f;try{f=T.parametric(p,e.valueAsNumber)}catch(l){if(l instanceof Error){S.displayError(l);return}else throw l}const P=f.rawPath;h.setD(P),v.setPathShape(f),$.innerText=h.getOuterHTML()};let a=!1;const n=()=>{y.disabled=!0,a||(a=!0,requestAnimationFrame(()=>{a=!1,s()}))};v.doItSoon=n,y.addEventListener("click",n);const o=c("segmentCountSpan",HTMLSpanElement),i=()=>{o.innerText=e.value.padStart(3,m.FIGURE_SPACE)};i(),e.addEventListener("input",()=>{i(),n()}),window.copyNewInput=(r,d)=>{u[d]=r.valueAsNumber;const p=m.assertClass(r.parentElement?.lastElementChild,HTMLSpanElement);p.innerText=r.valueAsNumber.toFixed(5),n()},I("button.show-this",HTMLButtonElement).forEach(r=>{const d=m.assertClass(r.parentElement?.nextElementSibling,HTMLPreElement);r.addEventListener("click",()=>{const p=d.innerText;b.value=p,n(),t.scrollIntoView({behavior:"smooth"})})}),n()}
