import"./modulepreload-polyfill-B5Qt9EMX.js";import{g as r,A as T}from"./client-misc-1LRynplM.js";/* empty css              */import{p as k,P as L}from"./path-shape-ctYMumRk.js";import{b as f,s as A}from"./utility-Dw-q5N--.js";import{m as w}from"./misc-CLGTS8fC.js";const S=r("go",HTMLButtonElement),b=r("source",HTMLTextAreaElement),M=r("result",HTMLElement);b.addEventListener("input",()=>S.disabled=!1);class x{static#t=r("error",HTMLDivElement);static display(t){this.#t.innerText=t}static displayError(t){t instanceof I?this.#t.innerHTML=`Unable to access <code>support.input(${t.requestedIndex})</code>.  Only ${m.length} input sliders currently exist.  <button onclick="addMoreInputs(this,${t.requestedIndex+1})">Add More</button>`:this.display(t.message)}static clear(){this.display("")}}class h{#t;get svgElement(){return this.#t}#e;get pathElement(){return this.#e}constructor(t){this.#t=f(t,SVGSVGElement),this.#e=f("path:not([data-skip-auto-fill])",SVGPathElement,this.#t),h.all.add(this)}static all=new Set;#s=NaN;get recommendedWidth(){return this.#s}#n(){const t=this.#e.getBBox(),e=this.#t.viewBox.baseVal;e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height;const o=t.width/t.height,n=300,l=n*o;this.#t.style.height=n+"px",this.#t.style.width=l+"px",this.#s=Math.max(e.width,e.height)/100,this.#t.style.setProperty("--recommended-width",this.#s.toString())}setPathShape(t){this.#e.setAttribute("d",t.rawPath),this.#n()}static setPathShape(t){this.all.forEach(e=>e.setPathShape(t))}static getOuterHTML(){return w.pickAny(h.all).#e.outerHTML}deAnimate(t=this.#e){t.getAnimations().forEach(e=>e.cancel())}}new h("#filledSample");new h("#outlineSample");class H extends h{constructor(){super("#chasingPathsSample")}setPathShape(t){super.setPathShape(t);const e=this.pathElement,o=1500,n=Date.now()/o%1;this.deAnimate();const l=e.getTotalLength();e.style.strokeDasharray=`0 ${l} ${l} 0`,e.animate([{strokeDashoffset:0},{strokeDashoffset:-2*l}],{iterations:1/0,duration:o,iterationStart:n})}}new H;class $ extends h{constructor(){super("#dancingAntsSample")}setPathShape(t){super.setPathShape(t);const e=this.pathElement,o=250;this.deAnimate();const n=e.getTotalLength(),l=Date.now()/o%1,c=4*this.recommendedWidth,a=c*10<n?n/Math.round(n/c):c;e.style.strokeDasharray=`0 ${a}`,e.animate([{strokeDashoffset:0},{strokeDashoffset:-a}],{iterations:1/0,duration:o,iterationStart:l})}}new $;class D extends h{constructor(){super("#tauFollowingPathSample");let t=!0;new T(()=>{const e=t?"0 0":"center";this.svgElement.style.offsetAnchor=e,t=!t})}setPathShape(t){super.setPathShape(t),this.svgElement.style.setProperty("--css-path",t.cssPath)}}new D;new h("#textPathSample");class E extends h{static doItSoon(){console.warn("placeholder")}#t;constructor(){super("#clipAndMaskSupport"),this.#t=f("mask > path",SVGPathElement,this.svgElement);const t=new ResizeObserver(()=>E.doItSoon());[this.#e,this.#s].forEach(e=>{e.decode().then(()=>E.doItSoon()),t.observe(e)})}get measurablePath(){return this.pathElement}#e=r("clipPathSample",HTMLImageElement);#s=r("maskSample",HTMLImageElement);#n=r("maskSample2",HTMLImageElement);setPathShape(t){super.setPathShape(t);const e=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="${this.svgElement.getAttribute("viewBox")}" preserveAspectRatio="xMidYMid meet"><path d="${t.rawPath}" stroke="red" fill-opacity="0.5" fill="black" stroke-width="${this.recommendedWidth*4}"/></svg>`,n=`url('${`data:image/svg+xml;base64,${btoa(e)}`}')`;this.#n.style.maskImage=n;const l=this.measurablePath.getBBox(),c=k(l,{x:0,y:0,height:this.#e.clientHeight,width:this.#e.clientWidth}),a=t.transform(c);this.#e.style.clipPath=a.cssPath,this.#t.setAttribute("d",a.rawPath);const d=c.a,u=this.recommendedWidth*d*8;this.#t.style.strokeWidth=u.toString();const g=507;this.deAnimate(this.#t);const i=this.#t.getTotalLength(),p=Date.now()/g%1,y=16*this.recommendedWidth*d,P=y*10<i?i/Math.round(i/y):y;this.#t.style.strokeDasharray=`${u} ${P-u}`,this.#t.animate([{strokeDashoffset:0},{strokeDashoffset:-P}],{iterations:1/0,duration:g,iterationStart:p})}}new E;const m=[];class I extends Error{constructor(t){super(`Unable to access support.input(${t}).  Only ${m.length} input sliders currently exist.`),this.requestedIndex=t}}const B={input(s){if(!Number.isSafeInteger(s)||s<0)throw new RangeError(`invalid ${s}`);if(s>=m.length)throw new I(s);return m[s]}},N=r("inputs",HTMLDivElement);function v(){S.disabled=!1;const s=m.length,t=.5,e=`<div class="has-slider">
      <input type="range" min="0" max="1" value="${t}" step="0.00001" oninput="copyNewInput(this, ${s})" />
      <code>support.input(${s})</code> =
      <span>${t.toString().padEnd(7,"0")}</span>
    </div>`;N.insertAdjacentHTML("beforeend",e),m.push(t)}window.addMoreInputs=(s,t)=>{for(s.disabled=!0;m.length<t;)v()};f("#inputsGroup button",HTMLButtonElement).addEventListener("click",()=>{v()});v();v();{const s=r("segmentCountInput",HTMLInputElement),t=r("inputsGroup",HTMLDivElement),e=()=>{x.clear();const a=`"use strict";
`+b.value+`
return { x, y };`;let d;try{d=new Function("t /* A value between 0 and 1, inclusive. */","support",a)}catch(i){if(i instanceof SyntaxError){x.displayError(i);return}else throw i}const u=i=>{const p=d(i,B);if(!(Number.isFinite(p.x)&&Number.isFinite(p.y)))throw new Error(`Invalid result.  Expected {x,y} where x and y are both finite numbers.  Found: ${JSON.stringify(p)} when t=${i}.`);return p};let g;try{g=L.parametric(u,s.valueAsNumber)}catch(i){if(i instanceof Error){x.displayError(i);return}else throw i}h.setPathShape(g),M.innerText=h.getOuterHTML()};let o=!1;const n=()=>{S.disabled=!0,o||(o=!0,requestAnimationFrame(()=>{o=!1,e()}))};E.doItSoon=n,S.addEventListener("click",n);const l=r("segmentCountSpan",HTMLSpanElement),c=()=>{l.innerText=s.value.padStart(3,w.FIGURE_SPACE)};c(),s.addEventListener("input",()=>{c(),n()}),window.copyNewInput=(a,d)=>{m[d]=a.valueAsNumber;const u=w.assertClass(a.parentElement?.lastElementChild,HTMLSpanElement);u.innerText=a.valueAsNumber.toFixed(5),n()},A("button.show-this",HTMLButtonElement).forEach(a=>{const d=w.assertClass(a.parentElement?.nextElementSibling,HTMLPreElement);a.addEventListener("click",()=>{const u=d.innerText;b.value=u,n(),t.scrollIntoView({behavior:"smooth"})})}),n()}{const s=r("hide-text",HTMLInputElement);s.addEventListener("click",()=>{s.checked?document.documentElement.dataset.hide="requested":delete document.documentElement.dataset.hide})}
