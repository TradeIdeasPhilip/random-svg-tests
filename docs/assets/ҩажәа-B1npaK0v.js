import"./modulepreload-polyfill-B5Qt9EMX.js";import{c as F}from"./client-misc-ZHNZ3-cL.js";/* empty css              */import{P as B,Q as _}from"./path-shape-csZDU6DB.js";import{b as E,s as f0,d as m0,m as g0,R as v0}from"./utility-D9E8BDCl.js";import{m as C}from"./misc-wGF4FraP.js";import{l as y0}from"./math-to-path-BjxPr1Cw.js";var U,t0;function j(){if(t0)return U;t0=1;var r=function(e,n){return[e[0]+n[0],e[1]+n[1]]},s=function(e,n){return[e[0]-n[0],e[1]-n[1]]},i=function(e,n){return[e[0]*n[0]-e[1]*n[1],e[0]*n[1]+e[1]*n[0]]},t=function(e){return Math.sqrt(e[0]*e[0]+e[1]*e[1])};return U={add:r,subtract:s,multiply:i,magnitude:t},U}var D,e0;function z(){if(e0)return D;e0=1;var r=j(),s={},i=function(n,a){var o=-2*Math.PI*(n/a);return s[a]=s[a]||{},s[a][n]=s[a][n]||[Math.cos(o),Math.sin(o)],s[a][n]},t=function(n){var a=n.map(r.magnitude);return a.slice(0,a.length/2)},e=function(n,a){var o=a/n.length,u=n.slice(0,n.length/2);return u.map(function(h,m){return m*o})};return D={fftMag:t,fftFreq:e,exponent:i},D}var p={},n0;function x0(){if(n0)return p;n0=1;var r=32;p.INT_BITS=r,p.INT_MAX=2147483647,p.INT_MIN=-1<<r-1,p.sign=function(t){return(t>0)-(t<0)},p.abs=function(t){var e=t>>r-1;return(t^e)-e},p.min=function(t,e){return e^(t^e)&-(t<e)},p.max=function(t,e){return t^(t^e)&-(t<e)},p.isPow2=function(t){return!(t&t-1)&&!!t},p.log2=function(t){var e,n;return e=(t>65535)<<4,t>>>=e,n=(t>255)<<3,t>>>=n,e|=n,n=(t>15)<<2,t>>>=n,e|=n,n=(t>3)<<1,t>>>=n,e|=n,e|t>>1},p.log10=function(t){return t>=1e9?9:t>=1e8?8:t>=1e7?7:t>=1e6?6:t>=1e5?5:t>=1e4?4:t>=1e3?3:t>=100?2:t>=10?1:0},p.popCount=function(t){return t=t-(t>>>1&1431655765),t=(t&858993459)+(t>>>2&858993459),(t+(t>>>4)&252645135)*16843009>>>24};function s(t){var e=32;return t&=-t,t&&e--,t&65535&&(e-=16),t&16711935&&(e-=8),t&252645135&&(e-=4),t&858993459&&(e-=2),t&1431655765&&(e-=1),e}p.countTrailingZeros=s,p.nextPow2=function(t){return t+=t===0,--t,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t+1},p.prevPow2=function(t){return t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t-(t>>>1)},p.parity=function(t){return t^=t>>>16,t^=t>>>8,t^=t>>>4,t&=15,27030>>>t&1};var i=new Array(256);return function(t){for(var e=0;e<256;++e){var n=e,a=e,o=7;for(n>>>=1;n;n>>>=1)a<<=1,a|=n&1,--o;t[e]=a<<o&255}}(i),p.reverse=function(t){return i[t&255]<<24|i[t>>>8&255]<<16|i[t>>>16&255]<<8|i[t>>>24&255]},p.interleave2=function(t,e){return t&=65535,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e&=65535,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1},p.deinterleave2=function(t,e){return t=t>>>e&1431655765,t=(t|t>>>1)&858993459,t=(t|t>>>2)&252645135,t=(t|t>>>4)&16711935,t=(t|t>>>16)&65535,t<<16>>16},p.interleave3=function(t,e,n){return t&=1023,t=(t|t<<16)&4278190335,t=(t|t<<8)&251719695,t=(t|t<<4)&3272356035,t=(t|t<<2)&1227133513,e&=1023,e=(e|e<<16)&4278190335,e=(e|e<<8)&251719695,e=(e|e<<4)&3272356035,e=(e|e<<2)&1227133513,t|=e<<1,n&=1023,n=(n|n<<16)&4278190335,n=(n|n<<8)&251719695,n=(n|n<<4)&3272356035,n=(n|n<<2)&1227133513,t|n<<2},p.deinterleave3=function(t,e){return t=t>>>e&1227133513,t=(t|t>>>2)&3272356035,t=(t|t>>>4)&251719695,t=(t|t>>>8)&4278190335,t=(t|t>>>16)&1023,t<<22>>22},p.nextCombination=function(t){var e=t|t-1;return e+1|(~e&-~e)-1>>>s(t)+1},p}var X,s0;function K(){if(s0)return X;s0=1;var r=j(),s=z(),i=x0();return X={fft:function t(e){var n=[],a=e.length;if(a==1)return Array.isArray(e[0])?[[e[0][0],e[0][1]]]:[[e[0],0]];for(var o=t(e.filter(M)),u=t(e.filter(T)),h=0;h<a/2;h++){var m=o[h],g=r.multiply(s.exponent(h,a),u[h]);n[h]=r.add(m,g),n[h+a/2]=r.subtract(m,g)}function M(l,d){return d%2==0}function T(l,d){return d%2==1}return n},fftInPlace:function(t){for(var e=t.length,n=i.countTrailingZeros(e),a=0;a<e;a++){var o=i.reverse(a)>>>i.INT_BITS-n;if(o>a){var u=[t[a],0];t[a]=t[o],t[o]=u}else t[o]=[t[o],0]}for(var h=2;h<=e;h+=h)for(var m=0;m<h/2;m++)for(var g=s.exponent(m,h),M=0;M<e/h;M++){var T=r.multiply(g,t[M*h+m+h/2]);t[M*h+m+h/2]=r.subtract(t[M*h+m],T),t[M*h+m]=r.add(t[M*h+m],T)}}},X}var Y,r0;function M0(){if(r0)return Y;r0=1;var r=K().fft;return Y={ifft:function(i){for(var t=[],e=0;e<i.length;e++)t[e]=[i[e][1],i[e][0]];for(var n=r(t),a=[],o=0;o<n.length;o++)a[o]=[n[o][1]/n.length,n[o][0]/n.length];return a}},Y}var Z,a0;function c0(){if(a0)return Z;a0=1;var r=j(),s=z(),i=function(t){for(var e=[],n=t.length,a=0;a<n;a++){e[a]=[0,0];for(var o=0;o<n;o++){var u=s.exponent(a*o,n),h;Array.isArray(t[o])?h=r.multiply(t[o],u):h=r.multiply([t[o],0],u),e[a]=r.add(e[a],h)}}return e};return Z=i,Z}var J,o0;function w0(){if(o0)return J;o0=1;var r=c0();function s(i){for(var t=[],e=0;e<i.length;e++)t[e]=[i[e][1],i[e][0]];for(var n=r(t),a=[],o=0;o<n.length;o++)a[o]=[n[o][1]/n.length,n[o][0]/n.length];return a}return J=s,J}var W,i0;function E0(){return i0||(i0=1,W={fft:K().fft,ifft:M0().ifft,fftInPlace:K().fftInPlace,util:z(),dft:c0(),idft:w0()}),W}var b0=E0();function F0(r,s=1024){if(Math.log2(s)%1!==0)throw new Error("numSamples must be a power of 2");const i=[];for(let n=0;n<s;n++){const a=n/s,o=r(a);i.push([o.x,o.y])}const t=b0.fft(i),e=[];for(let n=0;n<s;n++){const[a,o]=t[n],u=Math.sqrt(a*a+o*o)/s,h=Math.atan2(o,a),m=n<=s/2?n:n-s;e.push({frequency:m,amplitude:u,phase:h})}return e.sort((n,a)=>a.amplitude-n.amplitude),e}function T0(r,s){return i=>{let t=0,e=0;for(let n=0;n<Math.min(s,r.length);n++){const{frequency:a,amplitude:o,phase:u}=r[n],h=2*Math.PI*a*i+u;t+=o*Math.cos(h),e+=o*Math.sin(h)}return{x:t,y:e}}}function A0(r){let s=0;r.forEach(n=>s+=n.amplitude);const i=s/1e7,t=r.filter(n=>n.amplitude>i);let e=0;return t.forEach(n=>e+=n.amplitude),t}const h0=200,G=F.getById("go",HTMLButtonElement),O=F.getById("source",HTMLTextAreaElement),S=F.getById("sampleCode",HTMLSelectElement),k=[{name:"Custom",code:""},{name:"Polygons and Stars",code:`const numberOfPoints = 5;
/**
 * 0 to make a polygon.
 * 1 to make a star, if numberOfPoints is odd and at least 5.
 * 2 to make a different star, if numberOfPoints is odd and at least 7.
 */ 
const skip = 1;
const rotate = 2 * Math.PI / numberOfPoints * (1 + skip);

/**
 * Create a random number generator.
 * Change the seed to get different values.
 * random() will return a number between 0 and 1.
 */
const random = support.random("My seed 2025");

/**
 * How much effect does the random number generator have.
 * Far left → no randomness at all.
 */
const amplitude = support.input(0);

function jiggle() {
  return (random()-0.5) * amplitude;
}

const corners = [];
for (let i = 0; i < numberOfPoints; i++) {
  const θ = i * rotate;
  corners.push({x: Math.cos(θ) + jiggle(), y: Math.sin(θ) + jiggle()});
}
//console.log(corners);
const tSplitter = support.makeTSplitterA(0, corners.length, 0);
function f(t) {
  const segment = tSplitter(t);
  return support.lerpPoints(corners[segment.index], corners[(segment.index+1)%corners.length], segment.t);
}`},{name:"Square",default:!0,code:`const corners = [{x: -0.5, y: -0.5}, {x: 0.5, y: -0.5}, {x: 0.5, y: 0.5}, {x: -0.5, y: 0.5} ];
const tSplitter = support.makeTSplitterA(0, corners.length, 0);
function f(t) {
  const segment = tSplitter(t);
  return support.lerpPoints(corners[segment.index], corners[(segment.index+1)%corners.length], segment.t);
}`},{name:"Square with Easing",code:`const corners = [{x: -0.5, y: -0.5}, {x: 0.5, y: -0.5}, {x: 0.5, y: 0.5}, {x: -0.5, y: 0.5} ];
const tSplitter = support.makeTSplitterA(0, corners.length, 0);
function f(t) {
  const segment = tSplitter(t);
  return support.lerpPoints(corners[segment.index], corners[(segment.index+1)%corners.length], support.ease(segment.t));
}`},{name:"SVG Path",code:`// Also consider support.samples.hilbert[0] ... support.samples.hilbert[3]
//   and support.samples.peanocurve[0] ... support.samples.peanocurve[2] 
support.referencePath.d = support.samples.hilbert[1];
const length = support.referencePath.length;
console.log({length});
function f(t) {
  // Copy the path as is.
  return support.referencePath.getPoint(t * length);
}`},{name:"Simple Ellipse",code:`// The height can be anything convenient to you.
// This software will automatically zoom and pan to show off your work.
const height = 1;
// Use the first slider to change the width of the ellipse.
const width = height * support.input(0) * 2;
function f(t) {
// Use the second slider to change the starting point on the ellipse.
// This doesn't matter in a static ellipse, but it can be important in some animations and other special cases.
const angle = (t + support.input(1)) * 2 * Math.PI;
const x = width * Math.cos(angle);
const y = height * Math.sin(angle);
return {x, y};}`},{name:"Circle with Wavy Edge",code:`const height = 1;
const width = height;
function f(t) {
const angle = t * 2 * Math.PI;
const adjustmentAngle = angle * 8;
const adjustmentFactor = Math.sin(adjustmentAngle)/10+1;
const x = width * Math.cos(angle) * adjustmentFactor;
const y = height * Math.sin(angle) * adjustmentFactor;
return {x, y};}`},{name:"Lissajous Curves",code:`const a = 1; // Amplitude in x-direction
const b = 1; // Amplitude in y-direction
const freqX = 3; // Frequency in x-direction
const freqY = 2; // Frequency in y-direction
const phase = Math.PI / 2; // Phase difference
function f(t) {
const angle = t * 2 * Math.PI;
const x = a * Math.sin(freqX * angle + phase);
const y = b * Math.sin(freqY * angle);
return {x, y};}`},{name:"Hypocycloid / Astroid",code:`const R = 1; // Radius of the large circle
const r = R / 4; // Radius of the small circle (astroid case)
function f(t) {
const angle = t * 2 * Math.PI;
const x = (R - r) * Math.cos(angle) + r * Math.cos((R - r) / r * angle);
const y = (R - r) * Math.sin(angle) - r * Math.sin((R - r) / r * angle);
return {x, y};}`},{name:"Bell Curve",code:`// Number of standard deviations in each direction:
const right = support.input(0) * 5;
const left = - right;
const width = right - left;
const height = support.input(1) * 4 + 1;
function f(t) {
const x = t * width + left;
// Negate this.
// This program works with normal graphics notation where lower values of y are higher on the display.
// Normal algebra-class graphs show lower values of y lower on the screen.
const y = - height * Math.exp(-x*x);
return {x, y};}`},{name:"Archimedean Spiral with Oscillation",code:`const scale = 1; // Overall scale of the spiral
const turns = 3; // Number of full rotations
const waveFreq = 10; // Frequency of the oscillation
const waveAmp = 0.1; // Amplitude of the oscillation
function f(t) {
const angle = t * 2 * Math.PI * turns;
const radius = scale * t; // Linear growth for Archimedean spiral
const wave = waveAmp * Math.sin(t * 2 * Math.PI * waveFreq);
const x = radius * Math.cos(angle) * (1 + wave);
const y = radius * Math.sin(angle) * (1 + wave);
return {x, y};}`},{name:"Heart Curve ♡",code:`function f(t) {
const angle = t * 2 * Math.PI;
const x = 16 * Math.pow(Math.sin(angle), 3);
const algebraClassY = (13 * Math.cos(angle) - 5 * Math.cos(2 * angle) - 2 * Math.cos(3 * angle) - Math.cos(4 * angle));
const y = - algebraClassY;
return {x, y};}`},{name:"Butterfly Curve",code:`const scale = 0.2;
function f(t) {
const angle = t * 24 * Math.PI * support.input(0); // More rotations for complexity
const e = Math.exp(1);
const x = scale * Math.sin(angle) * (e ** Math.cos(angle) - 2 * Math.cos(4 * angle) - Math.pow(Math.sin(angle / 12), 5));
const y = - scale * Math.cos(angle) * (e ** Math.cos(angle) - 2 * Math.cos(4 * angle) - Math.pow(Math.sin(angle / 12), 5));
return {x, y};}`},{name:"Hollow Star ☆",code:`const scale = 1; // Overall scale of the star
const points = 5; // Number of star points
const innerRadius = 0.4; // Radius of the inner points (controls star shape)
const roundness = 0.1; // Amplitude of the oscillation for rounding
function f(t) {
const angle = t * 2 * Math.PI; // Full circle
const starAngle = angle * points; // Angle scaled for 5 points
const radius = scale * (1 - innerRadius * (Math.cos(starAngle) + 1) / 2); // Base star shape
const rounding = roundness * Math.sin(starAngle); // Oscillation for rounding
const x = (radius + rounding) * Math.cos(angle);
const y = (radius + rounding) * Math.sin(angle);
return {x, y};}
// According to Wikipedia, if it's hollow inside, it's a star.
// If you can see the lines crossing each other, it's a pentagram.`},{name:"Rotating Ellipse",code:`const r1 = 0.5; // Short radius of the ellipse
const r2 = 1.0; // Long radius of the ellipse
const phase = support.input(0) * Math.PI; // First slider: Rotation angle in radians (0 to π)
function f(t) {
const angle = t * 2 * Math.PI; // Full circle

// Basic ellipse centered at the origin
const xEllipse = r1 * Math.cos(angle);
const yEllipse = r2 * Math.sin(angle);

// Rotate the ellipse by the phase angle
const x = xEllipse * Math.cos(phase) - yEllipse * Math.sin(phase);
const y = xEllipse * Math.sin(phase) + yEllipse * Math.cos(phase);
return {x, y};}
// I used this formula as a starting place for the rounded pentagram.`},{name:"Rounded Pentagram ⛤, Heptagram, etc.",code:`const r1 = 0.5 * support.input(0); // Short radius of the ellipse. Top slider will adjust it.
const r2 = 1.0; // Long radius of the ellipse
function f(t) {
const phase = Math.PI * t; // The reference ellipse will make one half complete rotation during the tracing process.
const numberOfTrips = support.input(1) * 10;  // Effective range is 0 to 10 
const angle = t * 2 * Math.PI * numberOfTrips; // Basic ellipse centered at the origin
const xEllipse = r1 * Math.cos(angle);
const yEllipse = r2 * Math.sin(angle);// Rotate the ellipse by the phase angle
const x = xEllipse * Math.cos(phase) - yEllipse * Math.sin(phase);
const y = xEllipse * Math.sin(phase) + yEllipse * Math.cos(phase);
return {x, y};}
// The top slider controls the amount of curvature in the output.
// The second slider controls the number of lobes.
// Try values like 0.05, 0.15, 0.25, …, 0.95 for closed shapes.`},{name:"Squaring the Circle",code:`// This will trace out the shape of a dog tag using epicycles.
// Use the first slider to choose how many circles to use in
// this approximation, from 1 to 20.

// I was originally trying to use epicycles to create a square.
// But I ran into some problems,
// so this a square where two of the sides bulge out some.

const numberOfCircles = 1 + 19 * support.input(0);
const circlesToConsider = Math.ceil(numberOfCircles);
const attenuation = numberOfCircles - Math.floor(numberOfCircles);
function f(t) {
let x = 0;
let y = 0;
for (let k = 0; k < circlesToConsider; k++) {
  const n = 2 * k + 1; // Odd frequencies: 1, 3, 5, ...
  const radius = (4 * Math.sqrt(2)) / (Math.PI * Math.PI * n * n);
  const phase = k % 2 === 0 ? -Math.PI / 4 : Math.PI / 4;
  const factor = (k === circlesToConsider - 1 && attenuation > 0) ? attenuation : 1;
  const baseAngle = t * 2 * Math.PI;
  x += factor * radius * Math.cos(n * baseAngle + phase);
  y += factor * radius * Math.sin(n * baseAngle + phase);
}
return {x, y};}`},{name:"A Better Square",code:`// Inspired by https://www.youtube.com/watch?v=t99CmgJAXbg
// Square Orbits Part 1: Moon Orbits

const R = 0.573; // Match our first circle's radius
const moonRadius = (7 / 45) * R;
function f(t) {
const planetAngle = t * 2 * Math.PI; // Frequency 1
const moonAngle = -3 * planetAngle; // Frequency 3, opposite direction
const planetX = R * Math.cos(planetAngle);
const planetY = R * Math.sin(planetAngle);
const moonX = moonRadius * Math.cos(moonAngle);
const moonY = moonRadius * Math.sin(moonAngle);
const x = (planetX + moonX) * 1.2;
const y = (planetY + moonY) * 1.2;
return {x, y};}`},{name:"Fourier square wave",code:`// Use the first slider to choose how many sine waves to use in
// this approximation, from 1 to 20.

const numberOfCircles = 1 + 19 * support.input(0);
const circlesToConsider = Math.ceil(numberOfCircles);
const attenuation = numberOfCircles - Math.floor(numberOfCircles);
function f(t) {
let ySum = 0;
for (let k = 0; k < circlesToConsider; k++) {
  const n = 2 * k + 1; // Odd frequencies: 1, 3, 5, ...
  const amplitude = (4 / Math.PI) / n;
  const factor = (k === circlesToConsider - 1 && attenuation > 0) ? attenuation : 1;
  const baseAngle = 2 * Math.PI * 2.5 * t + Math.PI / 2; // 2.5 cycles, shift for vertical center
  ySum += factor * amplitude * Math.sin(n * baseAngle);
}
const x = (t * 5) - 2.5; // Span x from -2.5 to 2.5
const y = ySum;
return {x, y};}`}];function l0(r,s){const i=r.getBBox(),t=s.viewBox.baseVal;t.x=i.x,t.y=i.y,t.width=i.width,t.height=i.height;const e=i.width/i.height,n=300,a=n*e;s.style.height=n+"px",s.style.width=a+"px";const o=Math.max(t.width,t.height)/100;return s.style.setProperty("--recommended-stroke-width",o.toString()),{recommendedStrokeWidth:o}}class u0{#e=document.createElementNS("http://www.w3.org/2000/svg","svg");#t=document.createElementNS("http://www.w3.org/2000/svg","path");constructor(){this.#e.style.width="0",this.#e.style.height="0",this.#e.appendChild(this.#t),document.body.appendChild(this.#e)}get d(){return this.#t.getAttribute("d")??""}set d(s){this.#t.style.d="",this.#t.style.d=B.cssifyPath(s);const i=this.#t.style.d!="";if(this.#t.style.d="",i)this.#t.setAttribute("d",s);else throw new Error("Invalid path")}get empty(){return this.d==""}clear(){this.d=""}get length(){return this.#t.getTotalLength()}getPoint(s){return this.#t.getPointAtLength(s)}}window.pathWrapper=new u0;class I0{static#e=new this;#t=F.getById("distanceVsT",SVGSVGElement);#n=E("circle[data-distance]",SVGCircleElement,this.#t);#r=E("path",SVGPathElement,this.#t);#s=E("circle[data-t]",SVGCircleElement);constructor(){new F.AnimationLoop(s=>{if(this.#n.style.display="none",this.#s.style.display="none",this.f){s%=5e3;const t=s/5e3,e=t*100;this.#n.style.offsetDistance=e+"%",this.#n.style.display="";const{x:n,y:a}=this.f(t);this.#s.cx.baseVal.value=n,this.#s.cy.baseVal.value=a,this.#s.style.display=""}})}f;update(s,i){this.#r.setAttribute("d",i),l0(this.#r,this.#t),this.f=s,this.#n.style.offsetPath=B.cssifyPath(i)}static update(s,i){this.#e.update(s,i)}}class P0{static#e=new this;#t=F.getById("requestedVsReconstructed",SVGSVGElement);#n;#r;#s=E("[data-using] [data-circles]",HTMLTableCellElement);#a=E("[data-using] [data-amplitude]",HTMLTableCellElement);#h=E("[data-adding] [data-circles]",HTMLTableCellElement);#o=E("[data-adding] [data-amplitude]",HTMLTableCellElement);#l=E("[data-available] [data-circles]",HTMLTableCellElement);#i=E("[data-available] [data-amplitude]",HTMLTableCellElement);constructor(){[this.#n,this.#r]=f0("path",SVGPathElement,2,2,this.#t)}#c;update(s,i){this.#c?.();const t=[];this.#c=()=>{t.forEach(l=>l.cancel())},this.#n.setAttribute("d",i),l0(this.#n,this.#t);const e=F0(s),n=A0(e);window.nonZeroTerms=n,window.originalTerms=e;let a=0;n.forEach(l=>a+=l.amplitude);const o=10;let u=0;const h=750,m=500,g=n.slice(0,o-1).flatMap((l,d)=>{const y=l.amplitude/a*100,v={offset:NaN,startTime:NaN,endTime:NaN,usingCircles:d,usingAmplitude:u,addingCircles:1,addingAmplitude:y};u+=y;const w={offset:NaN,startTime:NaN,endTime:NaN,usingCircles:d+1,usingAmplitude:u,addingCircles:0,addingAmplitude:0};return d==0?[w]:[v,w]});{const l=g.at(-1),d=n.length-l.usingCircles;d>0&&g.push({offset:NaN,startTime:NaN,endTime:NaN,usingCircles:l.usingCircles,usingAmplitude:l.usingAmplitude,addingCircles:d,addingAmplitude:100-l.usingAmplitude},{offset:NaN,startTime:NaN,endTime:NaN,usingCircles:n.length,usingAmplitude:100,addingCircles:0,addingAmplitude:0})}let M=NaN;{let l=0;g.forEach(v=>{const w=v.addingCircles?m:h,A=l+w;v.startTime=l,v.endTime=A,l=A}),g.forEach(v=>{v.offset=v.startTime/l}),M=50/l;const y={...g.at(-1),startTime:l,offset:1};g.push(y)}const T={duration:g.at(-1).endTime*3,iterations:1/0};{let l=-1/0,d="";const y=g.map(({offset:v,usingCircles:w})=>{if(w!=l){let A=function(c){if(c.commands.length<2)throw new Error("wtf");const[f,...b]=c.commands,x=b.pop();if(!(f instanceof _&&x instanceof _))throw new Error("wtf");if(f.x0==x.x&&f.y0==x.y)return c;const I=(f.x0+x.x)/2,R=(f.y0+x.y)/2,H=_.controlPoints(I,R,f.x1,f.y1,f.x,f.y),p0=_.controlPoints(x.x0,x.y0,x.x1,x.y1,I,R);return new B([H,...b,p0])};const P=T0(n,w),N=B.parametric(P,h0);d=A(N).cssPath,l=w}return{offset:v,d,easing:"ease-in-out"}});t.push(this.#r.animate(y,T))}{const l=(d,y,v)=>{const w=c=>`'${c.toString().padStart(4,C.FIGURE_SPACE)}'`;let A;const P=new Array;v.forEach(({offset:c,circles:f})=>{A!==void 0&&P.push({offset:c,content:A});const b=A=w(f);P.push({offset:c,content:b})}),t.push(d.animate(P,{pseudoElement:"::after",...T}));const N=v.flatMap(({offset:c,circles:f},b,x)=>{function I(H=f){return H==0?.25:1}if(c==0||c==1)return[{offset:c,opacity:I()}];const R=x[b-1].circles;return R==f?[]:[{offset:c-M,opacity:I(R)},{offset:c,opacity:0},{offset:c+M,opacity:I()}]});[d,y].forEach(c=>t.push(c.animate(N,T)))};l(this.#s,this.#a,g.map(({offset:d,usingCircles:y})=>({offset:d,circles:y}))),l(this.#h,this.#o,g.map(({offset:d,addingCircles:y})=>({offset:d,circles:y}))),l(this.#l,this.#i,g.map(({offset:d,usingCircles:y,addingCircles:v})=>({offset:d,circles:n.length-y-v})))}{let l=function(c){let f;const b=new Array;return g.forEach(x=>{const{offset:I}=x,R=c(x);f!==void 0&&b.push({offset:I,content:f});const H=f=y(R);b.push({offset:I,content:H})}),b};const d=new Intl.NumberFormat("en-US",{minimumSignificantDigits:5,maximumSignificantDigits:5,useGrouping:!1}).format,y=c=>(c<0&&(c=0),d(c)),v=l(c=>c.usingAmplitude),w=l(c=>c.addingAmplitude),A=l(c=>100-c.usingAmplitude-c.addingAmplitude),P=[...v,...w,...A];let N=0;P.forEach(c=>{const[,f,b]=/^([0-9]+)\.([0-9]+)$/.exec(c.content);switch(f.length){case 3:break;case 2:{c.content=C.FIGURE_SPACE+c.content;break}case 1:{c.content=C.FIGURE_SPACE+C.FIGURE_SPACE+c.content;break}default:throw console.warn({beforeDecimalPoint:f,afterDecimalPoint:b,keyframe:c}),new Error("wtf")}N=Math.max(N,c.content.length)}),P.forEach(c=>{c.content=`'${(c.content+"%").padEnd(N+1,C.FIGURE_SPACE)}'`}),t.push(this.#a.animate(v,{pseudoElement:"::after",...T})),t.push(this.#o.animate(w,{pseudoElement:"::after",...T})),t.push(this.#i.animate(A,{pseudoElement:"::after",...T}))}}static update(s,i){this.#e.update(s,i)}}O.addEventListener("input",()=>{G.disabled=!1,k[0].code=O.value,S.selectedIndex=0});S.innerText="";k.forEach((r,s)=>{const i=document.createElement("option");i.innerText=r.name,S.appendChild(i),r.default&&(S.selectedIndex=s,O.value=r.code)});class V{static#e=F.getById("error",HTMLDivElement);static display(s){this.#e.innerText=s}static displayError(s){s instanceof d0?this.#e.innerHTML=`Unable to access <code>support.input(${s.requestedIndex})</code>.  Only ${q.length} input sliders currently exist.  <button onclick="addMoreInputs(this,${s.requestedIndex+1})">Add More</button>`:this.display(s.message)}static clear(){this.display("")}}function C0(r){try{return B.parametric(r,h0)}catch(s){if(s instanceof Error){V.displayError(s);return}else throw s}}const q=[];class d0 extends Error{constructor(s){super(`Unable to access support.input(${s}).  Only ${q.length} input sliders currently exist.`),this.requestedIndex=s}}const Q={hilbert:["m 128,384 0,-256 256,0 0,256","m 672,448 128,0 0,-128 -128,0 0,-128 0,-128 128,0 0,128 128,0 0,-128 128,0 0,128 0,128 -128,0 0,128 128,0","m 1248,480 0,-64 64,0 0,64 64,0 64,0 0,-64 -64,0 0,-64 64,0 0,-64 -64,0 -64,0 0,64 -64,0 0,-64 0,-64 64,0 0,-64 -64,0 0,-64 0,-64 64,0 0,64 64,0 0,-64 64,0 0,64 0,64 -64,0 0,64 64,0 64,0 64,0 0,-64 -64,0 0,-64 0,-64 64,0 0,64 64,0 0,-64 64,0 0,64 0,64 -64,0 0,64 64,0 0,64 0,64 -64,0 0,-64 -64,0 -64,0 0,64 64,0 0,64 -64,0 0,64 64,0 64,0 0,-64 64,0 0,64","m 528.5,1234 -32,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -64,0 0,-32 -32,0 0,32 -64,0 0,-32 32,0 0,-32 -32,0 0,-32 64,0 0,32 32,0 0,-96 -32,0 0,32 -64,0 0,-32 32,0 0,-32 -32,0 0,-32 64,0 0,32 32,0 0,-32 64,0 0,32 -32,0 0,64 32,0 0,-32 32,0 0,32 32,0 0,-64 -32,0 0,-32 32,0 0,-64 -32,0 0,32 -64,0 0,-32 32,0 0,-32 -32,0 0,-32 64,0 0,32 32,0 0,-64 -32,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -96,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -32,0 0,64 32,0 0,-32 64,0 0,32 -32,0 0,32 32,0 0,32 -64,0 0,-32 -32,0 0,32 -32,0 0,-32 -32,0 0,32 -64,0 0,-32 32,0 0,-32 -32,0 0,-32 64,0 0,32 32,0 0,-64 -32,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -96,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -32,0 0,64 32,0 0,-32 64,0 0,32 -32,0 0,32 32,0 0,32 -64,0 0,-32 -32,0 0,64 32,0 0,32 -32,0 0,64 32,0 0,-32 32,0 0,32 32,0 0,-64 -32,0 0,-32 64,0 0,32 32,0 0,-32 64,0 0,32 -32,0 0,32 32,0 0,32 -64,0 0,-32 -32,0 0,96 32,0 0,-32 64,0 0,32 -32,0 0,32 32,0 0,32 -64,0 0,-32 -32,0 0,32 -64,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -32,0","m 648.5,1242 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 48,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-48 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-16 16,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-48 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -48,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-48 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 48,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,16 16,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 48,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,48 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 48,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-48 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 48,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,16 16,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 48,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,48 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -48,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,48 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,16 -16,0 0,16 16,0 0,32 -16,0 0,-16 -16,0 0,16 -16,0 0,-32 16,0 0,-16 -32,0 0,16 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,48 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 32,0 0,-16 16,0 0,16 32,0 0,-16 -16,0 0,-16 16,0 0,-16 -32,0 0,16 -16,0 0,-32 16,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 48,0 0,-16 -16,0 0,-32 16,0 0,16 16,0 0,-16 16,0 0,32 -16,0 0,16 16,0 0,32 -16,0 0,-16 -32,0 0,16 16,0 0,16 -16,0 0,16 32,0 0,-16 16,0 0,16","m 1756.5,1246 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -8,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-8 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-8 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 8,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-8 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -8,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -8,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,8 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -8,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-8 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -8,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -8,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,8 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 8,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,8 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 24,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,8 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-24 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -8,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-8 -8,0 0,-8 16,0 0,8 8,0 0,-16 -8,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -24,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,16 8,0 0,8 -8,0 0,16 8,0 0,-8 8,0 0,8 8,0 0,-16 -8,0 0,-8 16,0 0,8 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,24 8,0 0,-8 16,0 0,8 -8,0 0,8 8,0 0,8 -16,0 0,-8 -8,0 0,8 -16,0 0,-8 8,0 0,-16 -8,0 0,8 -8,0 0,-8 -8,0 0,16 8,0 0,8 -8,0"],peanocurve:["m24 275v-264h132v264h132v-264","m337 275v-66h33v66h33v-165h-33v66h-33v-165h33v66h33v-66h33v66h33v-66h33v165h-33v-66h-33v165h33v-66h33v66h33v-66h33v66h33v-165h-33v66h-33v-165h33v66h33v-33-33","m647 275v-20.2h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-20.2h-10.1v20.2h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v20.2h-10.1v-20.2h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v20.2h-10.1v-20.2h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-20.2h-10.1v20.2h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-20.2h-10.1v20.2h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v20.2h-10.1v-20.2h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v50.5h-10.1v-20.2h-10.1v50.5h10.1v-20.2h10.1v20.2h10.1v-20.2h10.1v20.2h10.1v-50.5h-10.1v20.2h-10.1v-50.5h10.1v20.2h10.1v-20.2"]};console.table([...Q.hilbert.map((r,s)=>{const i=`hilbert ${s}`,t=r.length,n=B.fromString(r).commands.length;return{name:i,stringLength:t,segmentCount:n}}),...Q.peanocurve.map((r,s)=>{const i=`peanocurve ${s}`,t=r.length,n=B.fromString(r).commands.length;return{name:i,stringLength:t,segmentCount:n}})]);const L={input(r){if(!Number.isSafeInteger(r)||r<0)throw new RangeError(`invalid ${r}`);if(r>=q.length)throw new d0(r);return q[r]},ease(r){return(1-Math.cos(Math.PI*r))/2},makeTSplitter:g0,makeTSplitterA:m0,lerpPoints:y0,lerp:C.lerp,makeLinear:C.makeLinear,random:r=>{if(typeof r!="string")throw new RangeError("Invalid seed.  Expecting a string.");return v0.fromString(r)},referencePath:new u0,samples:Q},S0=F.getById("inputs",HTMLDivElement);function $(){G.disabled=!1;const r=q.length,s=.5,i=`<div class="has-slider">
      <input type="range" min="0" max="1" value="${s}" step="0.00001" oninput="copyNewInput(this, ${r})" />
      <code>support.input(${r})</code> =
      <span>${s.toString().padEnd(7,"0")}</span>
    </div>`;S0.insertAdjacentHTML("beforeend",i),q.push(s)}window.addMoreInputs=(r,s)=>{for(r.disabled=!0;q.length<s;)$()};E("#inputsGroup button",HTMLButtonElement).addEventListener("click",()=>{$()});$();$();{const r=()=>{V.clear();const t=`"use strict";
`+O.value+`
return f;`;let e;try{e=new Function("support",t)}catch(o){if(o instanceof SyntaxError){V.displayError(o);return}else throw o}let n;L.referencePath.clear();try{n=e(L)}catch(o){if(o instanceof Error){V.displayError(o);return}else throw o}const a=o=>{const u=n(o,L);if(!(Number.isFinite(u.x)&&Number.isFinite(u.y)))throw new Error(`Invalid result.  Expected {x,y} where x and y are both finite numbers.  Found: ${JSON.stringify(u)} when t=${o}.`);return u};if(L.referencePath.empty){const o=C0(a);if(!o)return;L.referencePath.d=o.rawPath}I0.update(a,L.referencePath.d),P0.update(a,L.referencePath.d)};let s=!1;const i=()=>{G.disabled=!0,s||(s=!0,requestAnimationFrame(()=>{s=!1,r()}))};G.addEventListener("click",i),window.copyNewInput=(t,e)=>{q[e]=t.valueAsNumber;const n=C.assertClass(t.parentElement?.lastElementChild,HTMLSpanElement);n.innerText=t.valueAsNumber.toFixed(5),i()};{const t=()=>{const e=k[S.selectedIndex];O.value=e.code,i()};S.addEventListener("change",t),F.getById("nextSample",HTMLButtonElement).addEventListener("click",()=>{S.selectedIndex=(S.selectedIndex+1)%k.length,t()})}{const t=F.getById("codeSamplesHolder",HTMLDivElement),e=F.getById("inputsGroup",HTMLDivElement),n=`<div>
            <div data-description>
              <button class="show-this">Show This</button><span></span>
            </div>
            <pre data-code-snippet></pre></div>`;k.forEach((a,o)=>{if(o>0){t.insertAdjacentHTML("beforeend",n);const u=t.lastElementChild,h=E("span",HTMLSpanElement,u);h.innerText=a.name;const m=E("pre",HTMLPreElement,u);m.innerText=a.code,E("button",HTMLButtonElement,u).addEventListener("click",()=>{O.value=a.code,i(),e.scrollIntoView({behavior:"smooth"})})}})}i()}{const r=F.getById("hide-text",HTMLInputElement);r.addEventListener("click",()=>{r.checked?document.documentElement.dataset.hide="requested":delete document.documentElement.dataset.hide})}
