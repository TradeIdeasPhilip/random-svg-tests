import"./modulepreload-polyfill-B5Qt9EMX.js";import{g as T}from"./client-misc-leadhGo2.js";import{d as A,T as g,Q as M,P as C,D as V}from"./letters-more-DrO7i2-O.js";import{b as P,a as I}from"./utility-DcEUXXL7.js";import{l as G}from"./math-to-path-CWuJ-zIl.js";const E=T("input",HTMLTextAreaElement),u=T("main",SVGElement);{const t=new g().font,{normal:o}=A(t),e=T("available",HTMLSpanElement);e.innerText=[...o].sort().join(" ")}class f{static#t;static doCleanup(){this.#t?.doCleanup(),this.#t=void 0,u.innerHTML=""}static restartCurrent(){const t=this.#t;t&&(this.doCleanup(),t.start())}start(){f.doCleanup(),this.startImpl(),f.#t=this}doCleanup(){}}class F extends f{startImpl(){const t=new g;t.restart();const o=E.value,e=t.addText(o);t.displayText(e,u),u.ownerSVGElement.viewBox.baseVal.height=t.baseline+t.font.get("0").fontMetrics.bottom}static start(){new this().start()}}const L=T("completionRatio",HTMLInputElement);class N extends f{startImpl(){const t=new g;t.restart();const o=E.value,e=t.addText(o);u.ownerSVGElement.viewBox.baseVal.height=t.baseline+t.font.get("0").fontMetrics.bottom;const l=g.join(e),s=document.createElementNS("http://www.w3.org/2000/svg","g");s.classList.add("handwriting"),u.appendChild(s);let a=0;l.splitOnMove().forEach(i=>{const h=document.createElementNS("http://www.w3.org/2000/svg","path");h.setAttribute("d",i.rawPath),s.appendChild(h);const n=a,p=h.getTotalLength();a=n+p,h.style.setProperty("--offset",n.toString()),h.style.setProperty("--length",p.toString())});const r=new AbortController;this.doCleanup=()=>r.abort();const x=a,w=()=>{const i=L.valueAsNumber*x;P(i),s.style.setProperty("--total-position",i.toString())};w(),L.addEventListener("input",w,{signal:r.signal})}static start(){new this().start()}}class R extends f{startImpl(){const t=new g;t.restart();const o=E.value,e=t.addText(o);u.ownerSVGElement.viewBox.baseVal.height=t.baseline+t.font.get("0").fontMetrics.bottom;const l=g.join(e),s=document.createElementNS("http://www.w3.org/2000/svg","g");s.classList.add("handwriting","skywriting"),u.appendChild(s);let a=0;l.splitOnMove().forEach(h=>{const n=document.createElementNS("http://www.w3.org/2000/svg","path");n.setAttribute("d",h.rawPath),s.appendChild(n);const p=a,c=n.getTotalLength();a=p+c,n.style.setProperty("--offset",p.toString()),n.style.setProperty("--length",c.toString())});const r=new AbortController;this.doCleanup=()=>r.abort();const w=a+40,i=()=>{const h=L.valueAsNumber*w;P(h),s.style.setProperty("--total-position",h.toString())};i(),L.addEventListener("input",i,{signal:r.signal})}static start(){new this().start()}}function B(d){return!d.commands.some(t=>t.command!="L")}class v extends f{static makeRoughShape(t,o){const e=new Array,l=new Array;return t.splitOnMove().forEach(s=>{if(B(s)){let a=function(n,p){const c=o*(p?Math.SQRT1_2:1)*Math.random(),m=Math.random()*Math.PI*2,y=I(c,m),b=n.x+y.x,S=n.y+y.y;return{x:b,y:S,offset:y,initial:n}};const r=s.commands,x=r.flatMap((n,p)=>p==0?[]:{x:n.x0,y:n.y0}),w=r[0],i=[a({x:w.x0,y:w.y0},"½")];x.forEach(n=>{i.push(a(n))});const h=r[r.length-1];if(i.push(a(h)),i.length!=r.length+1||r.length!=x.length+1)throw new Error("wtf");r.forEach((n,p)=>{const c=i[p],m=i[p+1],y=n instanceof M?{x:n.x1,y:n.y1}:G(c,m,Math.random()),b={x:y.x+(c.offset.x+m.offset.x)/2,y:y.y+(c.offset.y+m.offset.y)/2},S=a(b,"½");e.push(new M(c.initial.x,c.initial.y,b.x,b.y,m.initial.x,m.initial.y)),l.push(new M(c.x,c.y,S.x,S.y,m.x,m.y))})}else e.push(...s.commands),l.push(...s.commands)}),{before:new C(e),after:new C(l)}}static makeRoughFont(t){const o=new Map;return t.forEach((e,l)=>{const s=new V(()=>this.makeRoughShape(e.shape,e.fontMetrics.strokeWidth*1.5).before,e.advance,e.fontMetrics);o.set(l,s)}),o}static#t=[];static instantiate(t){const o=[...this.#t];let e=!0;return t.map(s=>{if(e){const a=o.at(0);if(a?.char===s.char)return o.shift(),{...s,shape:a.shape};e=!1}return s})}startImpl(){const t=new g;t.font=v.makeRoughFont(t.font),t.restart();const o=E.value,e=t.addText(o),l=v.instantiate(e);v.#t=t.displayText(l,u),u.ownerSVGElement.viewBox.baseVal.height=t.baseline+t.font.get("0").fontMetrics.bottom}static start(){new this().start()}}E.addEventListener("input",()=>{f.restartCurrent()});function k(){const d=document.querySelector('input[name="type"]:checked')?.id;switch(d){case"simpleType":{F.start();break}case"handwritingType":{new N().start();break}case"skywritingType":{new R().start();break}case"roughType":{new v().start();break}default:throw new Error(`invalid id: ${d}`)}}k();document.querySelectorAll('input[name="type"]').forEach(d=>{d.addEventListener("click",k)});
