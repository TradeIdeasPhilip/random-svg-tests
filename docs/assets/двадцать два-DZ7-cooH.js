import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css              */import{c as x,f as b}from"./hershey-fonts-B6s9pq_P.js";import{c as T}from"./client-misc-ZHNZ3-cL.js";import{L as H,P as N,Q as h}from"./path-shape-DxTxvizJ.js";import{m as w}from"./misc-wGF4FraP.js";import{a as d}from"./utility-By36BYLf.js";const L=T.getById("samples",HTMLDivElement);function B(s){const a=s.flatMap(n=>[n.left,n.leftSideBearing]).filter(n=>isFinite(n)),$=Math.min(...a),o=s.flatMap(n=>[n.right,n.rightSideBearing]).filter(n=>isFinite(n)),e=Math.max(...o),A=Math.min(...s.map(n=>n.top).filter(n=>isFinite(n))),M=Math.max(...s.map(n=>n.bottom).filter(n=>isFinite(n))),i=s.length;return{top:A,bottom:M,left:$,right:e,count:i}}const E={baseline:9,...B(x)},F={baseline:9,...B(b)};L.insertAdjacentHTML("beforeend",`<div>Cursive</div><div>Smooth Cursive</div><div>Futura L</div><div>Smooth Futura L</div><div>${JSON.stringify(E)}</div><div></div><div>${JSON.stringify(F)}</div><div></div>`);function P(s,a=w.FULL_CIRCLE/4*1.01){function $(i){const v=i.map((t,g,u)=>{const p=u[g-1],f=u[g+1];if(!(!p&&!f))if(p)if(f){const l=d(t.incomingAngle,p.outgoingAngle),r=d(t.outgoingAngle,f.incomingAngle),c=h.angles(t.x0,t.y0,l,t.x,t.y,r);return c.creationInfo.success?c:void 0}else{if(t.length>=5)return;{const l=d(p.outgoingAngle,t.incomingAngle),r=l-t.incomingAngle,c=t.incomingAngle-r;return h.angles(t.x0,t.y0,l,t.x,t.y,c)}}else{if(t.length>=5)return;{const l=d(t.outgoingAngle,f.incomingAngle),r=l-t.outgoingAngle,c=t.incomingAngle-r;return h.angles(t.x0,t.y0,c,t.x,t.y,l)}}});return v.forEach((t,g)=>{if(!t)return;const u=v[g-1],p=i[g-1],f=p&&!u,l=v[g+1],r=i[g+1],c=r&&!l;if(!(f||c))return;const I=f?p.outgoingAngle:t.incomingAngle,O=c?r.incomingAngle:t.outgoingAngle,S=h.angles(t.x0,t.y0,I,t.x,t.y,O);S.creationInfo.success&&(v[g]=S)}),v.map((t,g)=>t||i[g])}const o=[];let e=[];s.commands.forEach(i=>{if(!(i instanceof H))throw new Error("wtf");const n=e.at(-1);n&&(n.x!=i.x0||n.y!=i.y0||Math.abs(w.angleBetween(n.outgoingAngle,i.incomingAngle))>a)&&(o.push(e),e=[]),e.push(i)}),e.length>0&&o.push(e);const A=o.map(i=>$(i));return new N(A.flat())}x.forEach((s,a)=>{const $=b[a];[{letter:s,summary:E},{letter:$,summary:F}].forEach(({letter:o,summary:e})=>{L.insertAdjacentHTML("beforeend",`<svg viewBox="${e.left}, ${e.top}, ${e.right-e.left}, ${e.bottom-e.top}" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet"><path class="axes" d="M 0,${e.top-0} L 0,${e.bottom+0} M ${e.left-0},0 L ${e.right+0},0 M ${e.left-0},${e.baseline} L ${e.right+0},${e.baseline}" /><path class="left" d="M ${o.leftSideBearing},${e.top-0} L ${o.leftSideBearing},${e.bottom+0}" /><path class="right" d="M ${o.rightSideBearing},${e.top-0} L ${o.rightSideBearing},${e.bottom+0}" /><path class="main" d="${o.pathShape.rawPath}"></path></svg>`),L.insertAdjacentHTML("beforeend",`<svg viewBox="${e.left}, ${e.top}, ${e.right-e.left}, ${e.bottom-e.top}" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet"><path class="axes" d="M 0,${e.top-0} L 0,${e.bottom+0} M ${e.left-0},0 L ${e.right+0},0 M ${e.left-0},${e.baseline} L ${e.right+0},${e.baseline}" /><path class="left" d="M ${o.leftSideBearing},${e.top-0} L ${o.leftSideBearing},${e.bottom+0}" /><path class="right" d="M ${o.rightSideBearing},${e.top-0} L ${o.rightSideBearing},${e.bottom+0}" /><path class="main" d="${P(o.pathShape).rawPath}"></path></svg>`)})});
