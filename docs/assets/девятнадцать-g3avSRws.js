import"./modulepreload-polyfill-B5Qt9EMX.js";import{g as c}from"./client-misc-1LRynplM.js";/* empty css              */import{t as S,P as M}from"./path-shape-C2966eRL.js";import{b as m,s as A}from"./utility-Dw-q5N--.js";import{m as y}from"./misc-CLGTS8fC.js";const f=c("go",HTMLButtonElement),T=c("source",HTMLTextAreaElement),I=c("result",HTMLElement);T.addEventListener("input",()=>f.disabled=!1);function w(e,t,s){const a=e.width/e.height,i=t.width/t.height;let o,n;s==="fit"?a>i?(o=t.width/e.width,n=o):(n=t.height/e.height,o=n):a>i?(n=t.height/e.height,o=n):(o=t.width/e.width,n=o);const r=-e.x*o+(t.width-e.width*o)/2+t.x,u=-e.y*n+(t.height-e.height*n)/2+t.y;return new DOMMatrix().translate(r,u).scale(o,n)}function $(){{const e={x:-1,y:-1,width:2,height:2},t={x:0,y:0,height:244,width:325},s=w(e,t,"fit");console.log("Test 1 (fit, square to wider):",{testFrom:e,testTo:t,testMatrix:s.toJSON()}),[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}].forEach(({x:i,y:o})=>{const n=S(i,o,s);if(console.log({xFrom:i,yFrom:o,toPoint:{x:n.x,y:n.y}}),n.x<t.x||n.x>t.x+t.width||n.y<t.y||n.y>t.y+t.height)throw new Error(`Test 1 failed: Point (${n.x}, ${n.y}) is outside destination (${t.x}, ${t.y}, ${t.width}, ${t.height})`)})}{const e={x:-1,y:-1,width:2,height:2},t={x:0,y:0,height:325,width:244},s=w(e,t,"fit");console.log("Test 2 (fit, square to taller):",{testFrom:e,testTo:t,testMatrix:s.toJSON()}),[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}].forEach(({x:i,y:o})=>{const n=S(i,o,s);if(console.log({xFrom:i,yFrom:o,toPoint:{x:n.x,y:n.y}}),n.x<t.x||n.x>t.x+t.width||n.y<t.y||n.y>t.y+t.height)throw new Error(`Test 2 failed: Point (${n.x}, ${n.y}) is outside destination (${t.x}, ${t.y}, ${t.width}, ${t.height})`)})}{const e={x:-1,y:-1,width:2,height:2},t={x:0,y:0,height:244,width:325},s=w(e,t,"fill");console.log("Test 3 (fill, square to wider):",{testFrom:e,testTo:t,testMatrix:s.toJSON()}),[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}].forEach(({x:i,y:o})=>{const n=S(i,o,s);console.log({xFrom:i,yFrom:o,toPoint:{x:n.x,y:n.y}})})}console.log("All tests passed!")}$();class P{static#t=c("error",HTMLDivElement);static display(t){this.#t.innerText=t}static displayError(t){t instanceof v?this.#t.innerHTML=`Unable to access <code>support.input(${t.requestedIndex})</code>.  Only ${d.length} input sliders currently exist.  <button onclick="addMoreInputs(this,${t.requestedIndex+1})">Add More</button>`:this.display(t.message)}static clear(){this.display("")}}class h{#t;get svgElement(){return this.#t}#e;get pathElement(){return this.#e}constructor(t){this.#t=m(t,SVGSVGElement),this.#e=m("path:not([data-skip-auto-fill])",SVGPathElement,this.#t),h.all.add(this)}static all=new Set;#s=NaN;get recommendedWidth(){return this.#s}#n(){const t=this.#e.getBBox(),s=this.#t.viewBox.baseVal;s.x=t.x,s.y=t.y,s.width=t.width,s.height=t.height,this.#s=Math.max(s.width,s.height)/100,this.#t.style.setProperty("--recommended-width",this.#s.toString())}setPathShape(t){this.#e.setAttribute("d",t.rawPath),this.#n()}static setPathShape(t){this.all.forEach(s=>s.setPathShape(t))}static getOuterHTML(){return y.pickAny(h.all).#e.outerHTML}deAnimate(){this.#e.getAnimations().forEach(t=>t.cancel())}}new h("#filledSample");new h("#outlineSample");class L extends h{constructor(){super("#chasingPathsSample")}setPathShape(t){super.setPathShape(t);const s=this.pathElement,a=1500,i=Date.now()/a%1;this.deAnimate();const o=s.getTotalLength();s.style.strokeDasharray=`0 ${o} ${o} 0`,s.animate([{strokeDashoffset:0},{strokeDashoffset:-2*o}],{iterations:1/0,duration:a,iterationStart:i})}}new L;class H extends h{constructor(){super("#dancingAntsSample")}setPathShape(t){super.setPathShape(t);const s=this.pathElement,a=250;this.deAnimate();const i=s.getTotalLength(),o=Date.now()/a%1,n=4*this.recommendedWidth,r=n*10<i?i/Math.round(i/n):n;s.style.strokeDasharray=`0 ${r}`,s.animate([{strokeDashoffset:0},{strokeDashoffset:-r}],{iterations:1/0,duration:a,iterationStart:o})}}new H;class k extends h{constructor(){super("#tauFollowingPathSample")}setPathShape(t){super.setPathShape(t),this.svgElement.style.setProperty("--css-path",t.cssPath)}}new k;new h("#textPathSample");class x extends h{static doItSoon(){console.warn("placeholder")}#t;#e;constructor(){super("#clipAndMaskSupport"),this.#t=m("mask",SVGMaskElement,this.svgElement),this.#e=m("mask > path",SVGPathElement,this.svgElement);const t=new ResizeObserver(()=>x.doItSoon());[this.#s,this.#n].forEach(s=>{s.decode().then(()=>x.doItSoon()),t.observe(s)})}get measurablePath(){return this.pathElement}#s=c("clipPathSample",HTMLImageElement);#n=c("maskSample",HTMLImageElement);setPathShape(t){super.setPathShape(t);const s=this.measurablePath.getBBox(),a=w(s,{x:0,y:0,height:this.#s.clientHeight,width:this.#s.clientWidth},"fit"),i=t.transform(a);this.#s.style.clipPath=i.cssPath,this.#e.setAttribute("d",t.rawPath),this.#t.setAttribute("x",s.x.toString()),this.#t.setAttribute("y",s.y.toString()),this.#t.setAttribute("width",s.width.toString()),this.#t.setAttribute("height",s.height.toString())}}new x;const d=[];class v extends Error{constructor(t){super(`Unable to access support.input(${t}).  Only ${d.length} input sliders currently exist.`),this.requestedIndex=t}}const N={input(e){if(!Number.isSafeInteger(e)||e<0)throw new RangeError(`invalid ${e}`);if(e>=d.length)throw new v(e);return d[e]}},D=c("inputs",HTMLDivElement);function E(){f.disabled=!1;const e=d.length,t=.5,s=`<div class="has-slider">
      <input type="range" min="0" max="1" value="${t}" step="0.00001" oninput="copyNewInput(this, ${e})" />
      <code>support.input(${e})</code> =
      <span>${t.toString().padEnd(7,"0")}</span>
    </div>`;D.insertAdjacentHTML("beforeend",s),d.push(t)}window.addMoreInputs=(e,t)=>{for(e.disabled=!0;d.length<t;)E()};m("#inputsGroup button",HTMLButtonElement).addEventListener("click",()=>{E()});E();E();{const e=c("segmentCountInput",HTMLInputElement),t=c("inputsGroup",HTMLDivElement),s=()=>{P.clear();const r=`"use strict";
`+T.value+`
return { x, y };`;let u;try{u=new Function("t /* A value between 0 and 1, inclusive. */","support",r)}catch(l){if(l instanceof SyntaxError){P.displayError(l);return}else throw l}const p=l=>{const g=u(l,N);if(!(Number.isFinite(g.x)&&Number.isFinite(g.y)))throw new Error(`Invalid result.  Expected {x,y} where x and y are both finite numbers.  Found: ${JSON.stringify(g)} when t=${l}.`);return g};let b;try{b=M.parametric(p,e.valueAsNumber)}catch(l){if(l instanceof Error){P.displayError(l);return}else throw l}h.setPathShape(b),I.innerText=h.getOuterHTML()};let a=!1;const i=()=>{f.disabled=!0,a||(a=!0,requestAnimationFrame(()=>{a=!1,s()}))};x.doItSoon=i,f.addEventListener("click",i);const o=c("segmentCountSpan",HTMLSpanElement),n=()=>{o.innerText=e.value.padStart(3,y.FIGURE_SPACE)};n(),e.addEventListener("input",()=>{n(),i()}),window.copyNewInput=(r,u)=>{d[u]=r.valueAsNumber;const p=y.assertClass(r.parentElement?.lastElementChild,HTMLSpanElement);p.innerText=r.valueAsNumber.toFixed(5),i()},A("button.show-this",HTMLButtonElement).forEach(r=>{const u=y.assertClass(r.parentElement?.nextElementSibling,HTMLPreElement);r.addEventListener("click",()=>{const p=u.innerText;T.value=p,i(),t.scrollIntoView({behavior:"smooth"})})}),i()}
