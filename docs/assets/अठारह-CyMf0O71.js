import"./modulepreload-polyfill-B5Qt9EMX.js";import{g as f}from"./client-misc-1LRynplM.js";import{b as E,s as m}from"./utility-DC2vzgXJ.js";import{m as d}from"./misc-CLGTS8fC.js";function y(s,t,e,r,a){const o=Math.atan2(a-e,r-t),i=d.polarToRectangular(20,o);s.x1.baseVal.value=t+i.x,s.y1.baseVal.value=e+i.y,s.x2.baseVal.value=t-i.x,s.y2.baseVal.value=e-i.y}function p(...s){s.forEach(t=>{t.style.display=""})}function b(...s){s.forEach(t=>{t.style.display="none"})}class c{#l=f("scale",SVGGElement);#n=f("function",SVGPathElement);#a=E("#singleEstimate",SVGLineElement);#t=m("#estimateLines line",SVGLineElement);#i;#e;addBorders(){m("svg#main text",SVGTextElement).forEach(e=>{const r=d.assertClass(e.cloneNode(!0),SVGTextElement);r.classList.add("scale-background"),e.parentElement.insertBefore(r,e)})}constructor(){[this.#i,this.#e]=m("circle.measurement-fill",SVGCircleElement,2,2);const t=.13333333*2,e=t/this.#t.length,r=`${e} ${t-e}`;this.#t.forEach((a,o)=>{a.style.strokeDasharray=r,a.style.strokeDashoffset=(e*o).toString()}),this.addBorders(),this.update()}static instance=new c;#s=1;#r=2;get dx(){return this.#r}update(){const t=0+this.#r,r=-this.f(t),a=this.#s,o=t*a,i=r*a;this.#e.cx.baseVal.value=o,this.#e.cy.baseVal.value=i;let h,u;if(this.blurry){let l=function(){const n=.026666666;return(Math.random()*n-n/2)*a};b(this.#a),p(...this.#t),this.#t.forEach(n=>{y(n,l(),l(),o+l(),i+l())}),h=c.initialBlurRadius*a,u="url(#measurementBlur)"}else b(...this.#t),p(this.#a),y(this.#a,0,0,o,i),h=.06666666,u="var(--measurement-color)";[this.#i,this.#e].forEach(l=>{l.r.baseVal.value=h,l.style.fill=u})}#o=!1;get blurry(){return this.#o}set blurry(t){this.#o=t,this.update()}set dx(t){this.#r=t,this.update()}updatePath(){const t=this.#s,e=`path('M ${-3*t} ${-9*t} Q ${0*t} ${9*t} ${3*t} ${-9*t}')`;this.#n.style.d=e}get zoom(){return this.#s}set zoom(t){this.#s=t,this.update(),this.updatePath(),this.#l.style.transform=`scale(${t})`}f(t){return t*t}static maxBlurRadius=2.5;static initialBlurRadius=.25}window.GUI=c.instance;function g(s){return Math.exp(-s*s)}const V=Array.from(d.count(0,2.41,.4),s=>g(s));console.log(V);
