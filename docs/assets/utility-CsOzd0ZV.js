class l{constructor(t){this.onWake=t,this.callback=this.callback.bind(this),this.callback(performance.now())}#t=!1;cancel(){this.#t=!0}callback(t){this.#t||(requestAnimationFrame(this.callback),this.onWake(t))}}function f(e,t){return{x:Math.cos(t)*e,y:Math.sin(t)*e}}const u=(1+Math.sqrt(5))/2;function d(e){return isNaN(e.getTime())?"0000⸱00⸱00 00⦂00⦂00":`${e.getFullYear().toString().padStart(4,"0")}⸱${(e.getMonth()+1).toString().padStart(2,"0")}⸱${e.getDate().toString().padStart(2,"0")} ${e.getHours().toString().padStart(2,"0")}⦂${e.getMinutes().toString().padStart(2,"0")}⦂${e.getSeconds().toString().padStart(2,"0")}`}function g(e,t,n){return e+(t-e)*n}function p(...e){e.forEach(t=>{if(!isFinite(t))throw new Error("wtf")})}function w(e){for(let t=e.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1));[e[t],e[n]]=[e[n],e[t]]}return e}const a=2*Math.PI,m=360/a,S=a/360;function M(e,t){const n=c(e,a);let s=c(t,a)-n;const o=a/2;if(s>o?s-=a:s<-o&&(s+=a),Math.abs(s)>o)throw new Error("wtf");return s}function c(e,t){const n=e%t;return n<0?n+Math.abs(t):n}class b{static sfc32(t,n,i,s){return function(){t|=0,n|=0,i|=0,s|=0;let o=(t+n|0)+s|0;return s=s+1|0,t=n^n>>>9,n=i+(i<<3)|0,i=i<<21|i>>>11,i=i+o|0,(o>>>0)/4294967296}}static#t=42;static create(t=this.newSeed()){console.info(t);const n=JSON.parse(t);if(!(n instanceof Array))throw new Error("invalid seed");if(n.length!=4)throw new Error("invalid seed");const[i,s,o,r]=n;if(!(typeof i=="number"&&typeof s=="number"&&typeof o=="number"&&typeof r=="number"))throw new Error("invalid seed");return this.sfc32(i,s,o,r)}static newSeed(){const t=[];return t.push(Date.now()),t.push(this.#t++),t.push(Math.random()*2**31|0),t.push(Math.random()*2**31|0),JSON.stringify(t)}}function x(e){if(e==null)return;const t=+e;if(isFinite(t))return t}function y(e,t){const n=Math.min(e.x,t.x),i=Math.min(e.y,t.y),s=Math.max(e.x+e.width,t.x+t.width),o=Math.max(e.y+e.height,t.y+t.height),r=s-n,h=o-i;return{x:n,y:i,width:r,height:h}}export{l as A,b as R,f as a,p as b,M as c,d,m as e,y as f,x as g,c as h,g as l,u as p,S as r,w as s};
