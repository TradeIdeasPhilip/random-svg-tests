import{m as a}from"./misc-wGF4FraP.js";import{P as d}from"./path-shape-n6EbRjvk.js";class E{#t=document.createElementNS("http://www.w3.org/2000/svg","svg");#e=document.createElementNS("http://www.w3.org/2000/svg","path");constructor(){this.#t.style.width="0",this.#t.style.height="0",this.#t.style.position="absolute",this.#t.appendChild(this.#e),document.body.appendChild(this.#t)}get d(){return this.#e.getAttribute("d")??""}set d(t){this.#e.style.d="",this.#e.style.d=d.cssifyPath(t);const r=this.#e.style.d!="";if(this.#e.style.d="",r)this.#e.setAttribute("d",t);else throw new Error("Invalid path")}get empty(){return this.d==""}clear(){this.d=""}get length(){return this.#e.getTotalLength()}getPoint(t){return this.#e.getPointAtLength(t)}}function S(n,t){const r=a.angleBetween(n,t);return n+r/2}function w(n,t,r=1,e=1/0,o=document){const s=[];if(o.querySelectorAll(n).forEach(i=>{s.push(a.assertClass(i,t))}),s.length<r||s.length>e)throw new Error(`Expecting "${n}" to return [${r} - ${e}] instances of ${t.name}, found ${s.length}.`);return s}function y(n,t,r=document){return w(n,t,1,1,r)[0]}class p{constructor(){throw new Error("wtf")}static sfc32(t,r,e,o){function s(){t|=0,r|=0,e|=0,o|=0;let c=(t+r|0)+o|0;return o=o+1|0,t=r^r>>>9,r=e+(e<<3)|0,e=e<<21|e>>>11,e=e+c|0,(c>>>0)/4294967296}const i=s;return Object.defineProperty(i,"currentSeed",{get(){return JSON.stringify([t,r,e,o])}}),i}static#t=42;static seedIsValid(t){try{return this.create(t),!0}catch{return!1}}static create(t=this.newSeed()){console.info(t);const r=JSON.parse(t);if(!(r instanceof Array))throw new Error("invalid input");if(r.length!=4)throw new Error("invalid input");const[e,o,s,i]=r;if(!(typeof e=="number"&&typeof o=="number"&&typeof s=="number"&&typeof i=="number"))throw new Error("invalid input");return this.sfc32(e,o,s,i)}static newSeed(){const t=[];return t.push(Date.now()|0),t.push(this.#t++|0),t.push(Math.random()*2**31|0),t.push(performance.now()*1e4|0),JSON.stringify(t)}static fromString(t){try{return this.create(t)}catch{return this.create(this.anyStringToSeed(t))}}static anyStringToSeed(t){function r(s,i){return(s<<i|s>>>32-i)>>>0}const e=[2654435769,608135816,2242054355,320440878];return new TextEncoder().encode(t).forEach(s=>{e[0]^=s,e[0]=r(e[0],3),e[1]^=s,e[1]=r(e[1],5),e[2]^=s,e[2]=r(e[2],7),e[3]^=s,e[3]=r(e[3],11)}),e[0]^=r(e[1],7),e[1]^=r(e[2],11),e[2]^=r(e[3],13),e[3]^=r(e[0],17),JSON.stringify(e)}static test(){const e=[this.create()];for(;e.length<=10;){for(let s=0;s<20;s++){const i=e.map(c=>c());for(let c=1;c<i.length;c++)if(i[c]!==i[0]){debugger;throw new Error("wtf")}}const o=a.pick(e).currentSeed;e.forEach(s=>{if(s.currentSeed!=o){debugger;throw new Error("wtf")}}),e.push(this.create(o))}}}window.Random=p;function u(n){if(!(Number.isFinite(n)&&n>=0&&n<=1))throw new Error(`t should be between 0 and 1, inclusive. t == ${n}`)}function b(...n){n.forEach(e=>{if(!(e>=0&&e<Number.MAX_SAFE_INTEGER))throw new Error("wtf")});const t=a.sum(n);if(t==0)throw new Error("wtf");return e=>{u(e),e*=t;for(let o=0;o<n.length;o++){const s=n[o];if(e<=s)return e/=s,{t:e,index:o};e-=s}throw new Error("wtf")}}function N(n,t,r){const e=n+t+r,o=a.makeBoundedLinear(n/e,0,(n+t)/e,1);return i=>{u(i);const c=o(i)*t,h=Math.min(c|0,t-1),f=c-h;return u(f),{t:f,index:h}}}function v(n){if(n==null)throw new Error("wtf");return n}function A(n){const t=2/(n+1),r=1-t;return o=>r*o*o+t*o}function l(n,t){return t?l(t,n%t):n}function P(n,t){return n*t/l(n,t)}class x{#t;constructor(t=60){if(a.assertFinite(t),t<1||t!=(t|0))throw new Error("wtf");this.#t=t,this.fromMSF=this.fromMSF.bind(this),this.fromString=this.fromString.bind(this),Object.freeze(this)}get framesPerSecond(){return this.#t}fromMSF(t,r,e){return(t*60+r)*this.#t+e}fromString(t){const r=/^([0-9]+):([0-9]+):([0-9]+)$/.exec(t);if(!r)throw new Error("wtf");const e=a.parseIntX(r[1]),o=a.parseIntX(r[2]),s=a.parseIntX(r[3]);if(e===void 0||o===void 0||s===void 0)throw new Error("wtf");return this.fromMSF(e,o,s)}}function I(n){const t=n*Math.PI;return(1-Math.cos(t))/2}export{x as G,E as P,p as R,S as a,u as b,A as c,y as d,N as e,v as f,I as g,P as l,b as m,w as s};
