import"./modulepreload-polyfill-B5Qt9EMX.js";import{g as c}from"./client-misc-1LRynplM.js";/* empty css              */import{t as y,P as M}from"./path-shape-C2966eRL.js";import{b as m,s as A}from"./utility-Dw-q5N--.js";import{m as w}from"./misc-CLGTS8fC.js";const E=c("go",HTMLButtonElement),T=c("source",HTMLTextAreaElement),I=c("result",HTMLElement);T.addEventListener("input",()=>E.disabled=!1);function f(e,t,s){const a=e.width/e.height,o=t.width/t.height;let i,n;s==="fit"?a>o?(i=t.width/e.width,n=i):(n=t.height/e.height,i=n):a>o?(n=t.height/e.height,i=n):(i=t.width/e.width,n=i);const r=-e.x*i+(t.width-e.width*i)/2+t.x,d=-e.y*n+(t.height-e.height*n)/2+t.y;return new DOMMatrix().translate(r,d).scale(i,n)}function $(){{const e={x:-1,y:-1,width:2,height:2},t={x:0,y:0,height:244,width:325},s=f(e,t,"fit");console.log("Test 1 (fit, square to wider):",{testFrom:e,testTo:t,testMatrix:s.toJSON()}),[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}].forEach(({x:o,y:i})=>{const n=y(o,i,s);if(console.log({xFrom:o,yFrom:i,toPoint:{x:n.x,y:n.y}}),n.x<t.x||n.x>t.x+t.width||n.y<t.y||n.y>t.y+t.height)throw new Error(`Test 1 failed: Point (${n.x}, ${n.y}) is outside destination (${t.x}, ${t.y}, ${t.width}, ${t.height})`)})}{const e={x:-1,y:-1,width:2,height:2},t={x:0,y:0,height:325,width:244},s=f(e,t,"fit");console.log("Test 2 (fit, square to taller):",{testFrom:e,testTo:t,testMatrix:s.toJSON()}),[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}].forEach(({x:o,y:i})=>{const n=y(o,i,s);if(console.log({xFrom:o,yFrom:i,toPoint:{x:n.x,y:n.y}}),n.x<t.x||n.x>t.x+t.width||n.y<t.y||n.y>t.y+t.height)throw new Error(`Test 2 failed: Point (${n.x}, ${n.y}) is outside destination (${t.x}, ${t.y}, ${t.width}, ${t.height})`)})}{const e={x:-1,y:-1,width:2,height:2},t={x:0,y:0,height:244,width:325},s=f(e,t,"fill");console.log("Test 3 (fill, square to wider):",{testFrom:e,testTo:t,testMatrix:s.toJSON()}),[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}].forEach(({x:o,y:i})=>{const n=y(o,i,s);console.log({xFrom:o,yFrom:i,toPoint:{x:n.x,y:n.y}})})}console.log("All tests passed!")}$();class P{static#t=c("error",HTMLDivElement);static display(t){this.#t.innerText=t}static displayError(t){t instanceof v?this.#t.innerHTML=`Unable to access <code>support.input(${t.requestedIndex})</code>.  Only ${u.length} input sliders currently exist.  <button onclick="addMoreInputs(this,${t.requestedIndex+1})">Add More</button>`:this.display(t.message)}static clear(){this.display("")}}class h{#t;get svgElement(){return this.#t}#e;get pathElement(){return this.#e}constructor(t){this.#t=m(t,SVGSVGElement),this.#e=m("path:not([data-skip-auto-fill])",SVGPathElement,this.#t),h.all.add(this)}static all=new Set;#s=NaN;get recommendedWidth(){return this.#s}#n(){const t=this.#e.getBBox(),s=this.#t.viewBox.baseVal;s.x=t.x,s.y=t.y,s.width=t.width,s.height=t.height,this.#s=Math.max(s.width,s.height)/100,this.#t.style.setProperty("--recommended-width",this.#s.toString())}setPathShape(t){this.#e.setAttribute("d",t.rawPath),this.#n()}static setPathShape(t){this.all.forEach(s=>s.setPathShape(t))}static getOuterHTML(){return w.pickAny(h.all).#e.outerHTML}deAnimate(){this.#e.getAnimations().forEach(t=>t.cancel())}}new h("#filledSample");new h("#outlineSample");class L extends h{constructor(){super("#chasingPathsSample")}setPathShape(t){super.setPathShape(t);const s=this.pathElement,a=1500,o=Date.now()/a%1;this.deAnimate();const i=s.getTotalLength();s.style.strokeDasharray=`0 ${i} ${i} 0`,s.animate([{strokeDashoffset:0},{strokeDashoffset:-2*i}],{iterations:1/0,duration:a,iterationStart:o})}}new L;class k extends h{constructor(){super("#dancingAntsSample")}setPathShape(t){super.setPathShape(t);const s=this.pathElement,a=250;this.deAnimate();const o=s.getTotalLength(),i=Date.now()/a%1,n=4*this.recommendedWidth,r=n*10<o?o/Math.round(o/n):n;s.style.strokeDasharray=`0 ${r}`,s.animate([{strokeDashoffset:0},{strokeDashoffset:-r}],{iterations:1/0,duration:a,iterationStart:i})}}new k;class H extends h{constructor(){super("#tauFollowingPathSample")}setPathShape(t){super.setPathShape(t),this.svgElement.style.setProperty("--css-path",t.cssPath)}}new H;new h("#textPathSample");class g extends h{static doItSoon(){console.warn("placeholder")}#t;#e;constructor(){super("#clipAndMaskSupport"),this.#t=m("mask",SVGMaskElement,this.svgElement),this.#e=m("mask > path",SVGPathElement,this.svgElement);const t=new ResizeObserver(()=>g.doItSoon());[this.#s,this.#n].forEach(s=>{s.decode().then(()=>g.doItSoon()),t.observe(s)})}get measurablePath(){return this.pathElement}#s=c("clipPathSample",HTMLImageElement);#n=c("maskSample",HTMLImageElement);setPathShape(t){super.setPathShape(t);const s=this.measurablePath.getBBox(),a=f(s,{x:0,y:0,height:this.#s.clientHeight,width:this.#s.clientWidth},"fit"),o=t.transform(a);this.#s.style.clipPath=o.cssPath,this.#e.setAttribute("d",o.rawPath);const i=y(0,this.recommendedWidth,a).y,n=a.a;console.log({transformedRecommendedWidth:i,recommendedWidth:this.recommendedWidth,xScale:n,matrix:a}),this.#e.style.strokeWidth=(this.recommendedWidth*n*4).toString(),this.#t.setAttribute("x",s.x.toString()),this.#t.setAttribute("y",s.y.toString()),this.#t.setAttribute("width",s.width.toString()),this.#t.setAttribute("height",s.height.toString())}}new g;const u=[];class v extends Error{constructor(t){super(`Unable to access support.input(${t}).  Only ${u.length} input sliders currently exist.`),this.requestedIndex=t}}const N={input(e){if(!Number.isSafeInteger(e)||e<0)throw new RangeError(`invalid ${e}`);if(e>=u.length)throw new v(e);return u[e]}},D=c("inputs",HTMLDivElement);function S(){E.disabled=!1;const e=u.length,t=.5,s=`<div class="has-slider">
      <input type="range" min="0" max="1" value="${t}" step="0.00001" oninput="copyNewInput(this, ${e})" />
      <code>support.input(${e})</code> =
      <span>${t.toString().padEnd(7,"0")}</span>
    </div>`;D.insertAdjacentHTML("beforeend",s),u.push(t)}window.addMoreInputs=(e,t)=>{for(e.disabled=!0;u.length<t;)S()};m("#inputsGroup button",HTMLButtonElement).addEventListener("click",()=>{S()});S();S();{const e=c("segmentCountInput",HTMLInputElement),t=c("inputsGroup",HTMLDivElement),s=()=>{P.clear();const r=`"use strict";
`+T.value+`
return { x, y };`;let d;try{d=new Function("t /* A value between 0 and 1, inclusive. */","support",r)}catch(l){if(l instanceof SyntaxError){P.displayError(l);return}else throw l}const p=l=>{const x=d(l,N);if(!(Number.isFinite(x.x)&&Number.isFinite(x.y)))throw new Error(`Invalid result.  Expected {x,y} where x and y are both finite numbers.  Found: ${JSON.stringify(x)} when t=${l}.`);return x};let b;try{b=M.parametric(p,e.valueAsNumber)}catch(l){if(l instanceof Error){P.displayError(l);return}else throw l}h.setPathShape(b),I.innerText=h.getOuterHTML()};let a=!1;const o=()=>{E.disabled=!0,a||(a=!0,requestAnimationFrame(()=>{a=!1,s()}))};g.doItSoon=o,E.addEventListener("click",o);const i=c("segmentCountSpan",HTMLSpanElement),n=()=>{i.innerText=e.value.padStart(3,w.FIGURE_SPACE)};n(),e.addEventListener("input",()=>{n(),o()}),window.copyNewInput=(r,d)=>{u[d]=r.valueAsNumber;const p=w.assertClass(r.parentElement?.lastElementChild,HTMLSpanElement);p.innerText=r.valueAsNumber.toFixed(5),o()},A("button.show-this",HTMLButtonElement).forEach(r=>{const d=w.assertClass(r.parentElement?.nextElementSibling,HTMLPreElement);r.addEventListener("click",()=>{const p=d.innerText;T.value=p,o(),t.scrollIntoView({behavior:"smooth"})})}),o()}
