@import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100..700;1,100..700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Life+Savers:wght@400;700;800&display=swap");

.numbers {
  font-family: "IBM Plex Sans", sans-serif;
  font-optical-sizing: auto;
  font-weight: 200;
}

body {
  font-family: "Life Savers", serif;
  font-weight: bold;
  font-size: 3vw;
  padding: 0;
  margin: 0;
  background-color: blueviolet;
  --pastel-blue: hsl(200, 50%, 70%);
  --darker-blue: hsl(200, 60%, 50%);
  --pastel-lavender: hsl(270, 45%, 75%);
  --darker-purple: hsl(270, 55%, 55%);
  --pastel-pink: hsl(340, 50%, 70%);
  --darker-pink: hsl(340, 60%, 50%);
  --pastel-mint: hsl(170, 45%, 70%);
  --darker-teal: hsl(170, 55%, 50%);
  --pastel-coral: hsl(15, 50%, 70%);
  --darker-coral: hsl(15, 60%, 50%);

  overflow: hidden;
}

svg#main {
  width: 100vw;
  height: 100vh;
  --base-stroke-width: 0.05px;
}

#backgroundCanvas {
  width: calc(min(100vw, 177.77777778vh));
  position: absolute;
  top: 0;
  right: 0;
  z-index: -1;
}

/*
#srgbCanvas {
  width: calc(min(100vw, 177.77777778vh));
}
*/

line#for-scale {
  display: none;
  stroke: orange;
  stroke-width: var(--base-stroke-width);
}

text#chapter {
  font-size: 0.5px;
  text-anchor: end;
  fill: #888;
  /* mix-blend-mode: color-dodge; */
  fill: #ccc;
  mix-blend-mode: difference;
}

g.frequencies {
  transform: scale(0.5) translate(1.25px);
}

g.frequency:nth-child(1) {
  transform: translate(0, -0.5px);
}

g.frequency:nth-child(2) {
  transform: translate(0, 2px);
}

g.frequency:nth-child(3) {
  transform: translate(0, 4.5px);
}

g.frequency:nth-child(4) {
  transform: translate(0, 7px);
}

g.frequency:nth-child(5) {
  transform: translate(0, 9.5px);
}

g.frequency:nth-child(6) {
  transform: translate(0, 12px);
}

g.frequency:nth-child(7) {
  transform: translate(0, 14.5px);
}

g.frequency:nth-child(8) {
  transform: translate(7px, -0.5px);
}

g.frequency:nth-child(9) {
  transform: translate(7px, 2px);
}

g.frequency:nth-child(10) {
  transform: translate(7px, 4.5px);
}

g.frequency:nth-child(11) {
  transform: translate(7px, 7px);
}

g.frequency:nth-child(12) {
  transform: translate(7px, 9.5px);
}

g.frequency:nth-child(13) {
  transform: translate(7px, 12px);
}

g.frequency:nth-child(14) {
  transform: translate(7px, 14.5px);
}

.frequency {
  font-size: 1px;
}

.frequency text {
  transform: translate(4px, 2.5px);
  fill: #888;
  /* mix-blend-mode: color-dodge; */
}

.spinner {
  fill: #555;
  /*  mix-blend-mode: color-dodge; */
  fill: #ccc;
  mix-blend-mode: difference;
  transform-origin: 2px 2px;
}

path[data-reference] {
  fill: #ccc;
  stroke: none !important;
  fill-rule: evenodd;
  mix-blend-mode: difference;
  filter: url(#hueRotate);
  filter: none;

  /* It seems like vector-effect: non-scaling-stroke would do this automatically, but I never got it to work. */
  stroke-width: 0;
  stroke-linecap: round;
  stroke-linejoin: round;
}

path[data-live] {
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: calc(var(--base-stroke-width) / var(--path-scale) * 3.5);
  stroke: #ccc !important;
  /*   mix-blend-mode: color-dodge;*/
}

#table-container {
  position: absolute;
  top: 0;
  bottom: 0;
  display: flex;
  display: none;
  align-items: center;
}

#progress td {
  padding: 0 0.5em;
  color: white;
}
#progress th {
  padding: 0 0.5em;
  font-weight: bolder;
}

#progress tr th:first-child {
  text-align: right;
  color: red;
}

#progress tr:first-child th {
  text-align: left;
  color: var(--blue);
}

/* When an image appears under the table we use a black outline
   to make sure the table's text is readable.  */
td,
th {
  filter: url(#black-outline);
}
