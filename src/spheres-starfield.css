/* Notice that my body and my top level div both have a height of 100vh,
 * my body has overflow:auto and my div has an overflow of clip.
 * This combination seems to work best for me.  My content will always
 * be the maximum possible size.  But the user can scroll to see or hide
 * the optional parts of a mobile browser.
 *
 * Setting overflow:clip has lots of unexpected side effects!
 * Like making the #controls finally stop trying to use space 
 * that it doesn't have access to and actually wrap like I told it to.
 */
body {
  padding: 0;
  margin: 0;
  overflow: auto;
  display: flex;
  flex-wrap: nowrap;
  height: 100vh;
}

/* I'm using display:grid because it gave me less grief than display:flex.
 * I originally tried to use two separate grid cells, but that also caused
 * trouble.  I'm still not 100% sure what that problem was because of the
 * surprising ways css properties interact with each other.  (I.e. I 
 * changed a bunch of things and I'm not sure which one fixed my problem.)
 */
#topContainer {
  overflow: clip;
  display: grid;
  height: 100vh;
  width: 100vw;
  justify-items: stretch;
  align-items: stretch;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: "main";
}

svg {
  grid-area: main;
}

#controls {
  max-height: 100vh;
  margin: 0.333em;
  display: flex;
  flex-wrap: wrap;
  /* column-gap or just gap was giving me a lot of trouble.
   * Ideally I'd just set gap: 0.333em; */
  row-gap: 0.333em;
  align-content: flex-start;
  grid-area: main;
}

@media (orientation: landscape) {
  #controls {
    flex-direction: column;
    align-items: stretch;
    justify-self: end;
  }
  #controls button {
    /* I'm using the left margin as a replacement for the 
     * column gap which was giving me trouble.  I don't know if
     * was a bug in Chrome or a feature of CSS.  It would do the
     * layout correctly except for one thing:  It didn't take the
     * space added by column-gap into account when determining
     * the width of the #controls.  So I couldn't pin the controls
     * to the right side of the container, and I couldn't set 
     * #controls { overflow:clip; } because part of the content
     * would get cut off.
     *
     * Notice a lot of bugs that popped up only when the the
     * #controls div actually had to wrap.  (I.e. bigger font
     * or smaller screen.)  It's a good reminder to do a lot of
     * testing.  But it sucks that I can't rely on something as
     * simple and common as wrapping!
     */
    margin-left: 0.6em;
  }
}

@media (orientation: portrait) {
  #controls {
    flex-direction: row;
    align-items: baseline;
    align-self: end;
  }
  #controls button {
    margin-left: 0.3em;
  }
}

#controls div.spacer {
  height: 0.3em;
  width: 0.3em;
  /*background-color: black;*/
  margin: 0.05em;
  align-self: center;
}

button {
  user-select: none;
  font-size: 15pt;
}

#controls button {
  outline-color: blue;
  outline-style: solid;
  outline-width: 0;
  outline-offset: 0.05rem;
}

#controls button.selected {
  outline-width: 0.233em;
}
